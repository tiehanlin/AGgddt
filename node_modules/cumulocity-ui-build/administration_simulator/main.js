/* administration_simulator 8.7.2 2017-08-02T09:53:15+00:00 79d3e7d78638 (hotfix/8.7.2) tip */
angular.module("c8y.parts.simulator",[]).config(["c8yNavigatorProvider","c8yViewsProvider","gettext",function(e,n,t){"use strict";e.addNavigation({parent:t("Applications"),name:t("Simulator"),path:"simulator",icon:"hdd-o",priority:5e3}),n.when("/simulator",{templateUrl:"administration_simulator/views/simulator.html"})}]),angular.module("c8y.parts.simulator").controller("simulatorCtrl",["$scope","$q","$http","c8ySimulator","c8yModal","c8yAlert","c8yTitle","c8yBase","gettext","gettextCatalog",function(e,n,t,a,i,s,l,o,r,m){"use strict";function u(){l.changeTitle({title:r("Simulator")})}function c(){d().then(v),g().then(function(e){p(e.templates)})}function d(){return a.list()}function g(){return a.getSensors()}function v(n){e.simulators||(e.simulators=[]),n.simulators.forEach(function(n){e.simulators.push(n)})}function p(n){e.sensors||(e.sensors=[]),n.forEach(function(n){n.checked=!1,n.intervall=5,e.sensors.push(n)})}function f(e,n){a.changeState(e.id,n),e.com_cumulocity_model_devicesimulator_SimulatorConfiguration.state=n}function h(n){i({title:r("Confirm delete?"),body:m.getString('Do you really want to remove simulated device "{{simulatorName}}" with the id {{simulatorId}}?',{simulatorName:n.com_cumulocity_model_devicesimulator_SimulatorConfiguration.name,simulatorId:n.id}),status:"danger"}).then(angular.bind(a,a.deleteSimulator,n.id)).then(_.partial(_.pull,e.simulators,n)).then(_.partial(s.success,r("Simulated device successfully deleted")))}function b(){T()||(e.newSim={type:"com_cumulocity_model_simulator_Configuration",state:"NEW",numberOfInstances:1,com_cumulocity_model_simulator_Sensors:[{}]},e.deviceTemplate={name:"device",api:"/inventory/managedObjects",placeholder:"&&",contentType:"application/vnd.com.nsn.cumulocity.managedObject+json",templateString:'{ "name": "simulatedDevice", "type": "c8y_Linux", "c8y_IsDevice": {}, "c8y_RequiredAvailability": {"responseInterval": 10}, "c8y_Hardware": {"model": "simulated device"} }'})}function S(){e.newSim=null,e.template=null;for(var n=0;n<e.sensors.length;n++)e.sensors[n].checked=!1,e.sensors[n].intervall=5,e.sensors[n].values=null}function y(){return!(!e.simulatorForm.$invalid&&N()&&!T())}function w(){e.newSim.com_cumulocity_model_simulator_Sensors=[{}],e.deviceTemplate.name=e.newSim.name,a.createTemplate(e.deviceTemplate).then(function(n){x(n.data.id),a.createSimulator(e.newSim).then(function(){S(),e.simulators=[],d().then(v)})})}function x(n){e.newSim.deviceTemplate=n;for(var t=0,a=0;a<e.sensors.length;a++){var i=e.sensors[a];i.checked===!0&&(e.newSim.com_cumulocity_model_simulator_Sensors[t]={},e.newSim.com_cumulocity_model_simulator_Sensors[t].msgId=parseInt(n)+t,e.newSim.com_cumulocity_model_simulator_Sensors[t].name=i.name,e.newSim.com_cumulocity_model_simulator_Sensors[t].sensorTemplate=i.id,e.newSim.com_cumulocity_model_simulator_Sensors[t].measurementTemplate=i.measurementId,e.newSim.com_cumulocity_model_simulator_Sensors[t].intervall=i.intervall,e.newSim.com_cumulocity_model_simulator_Sensors[t].data=I(i),t++)}}function I(e){for(var n=e.values.split(";"),t=[],a=0;a<n.length;a++)t[a]=n[a].trim()+",{{NOW}},{{$.id}}";return t}function k(n){var t=[];return e[M][n]&&e[M][n].$error&&_.forEach(e[M][n].$error,function(e,a){e&&(_.isUndefined($[a])||("object"==typeof $[a]?$[a][n]&&t.push(m.getString($[a][n])):t.push(m.getString($[a]))))}),t.join(" ")}function N(){return _.some(e.sensors,"checked")}function C(e){return"NEW"===e.com_cumulocity_model_devicesimulator_SimulatorConfiguration.state||"PAUSED"===e.com_cumulocity_model_devicesimulator_SimulatorConfiguration.state}function T(){return e.simulators.length>=A}function O(){return T()?D:""}function q(e){return e.com_cumulocity_model_devicesimulator_SimulatorConfiguration.name||r("-- device name not defined --")}var M="simulatorForm",$={required:r("This field is required!"),maxlength:r("Up to 120 characters allowed!"),min:{numberOfInstances:r("You have to define at least 1 instance!")},max:{numberOfInstances:r("You have to define at most 5 instances!")}},A=10,E=1,H=5,D=r("Maximum of simulated devices reached.");e.simulators=[],e.changeState=f,e.deleteSimulator=h,e.add=b,e.cancelAdd=S,e.save=w,e.invalid=angular.bind(o,o.invalid,e,M),e.validationHints=k,e.isSensorChecked=N,e.canRun=C,e.hasSimulationMaximum=T,e.getSimulationMaximumTooltip=O,e.disableSave=y,e.getSimulatorName=q,e.maxInstances=H,e.minIntances=E,c(),u()}]),function(){"use strict";function e(e){var n;n='<div ng-controller="simulatorCtrl">\n\n<div class="alert alert-warning" translate>\n  This feature is deprecated and will be decommissioned in the next release.\n  Please use the <a href="/apps/devicemanagement/#/simulators">new simulator</a> feature instead.\n</div>\n\n<div class="clearfix">\n  <button class="btn btn-link pull-right" ng-click="add()" ng-class="{\'disabled\':hasSimulationMaximum()}" uib-tooltip="{{getSimulationMaximumTooltip() | translate}}" tooltip-placement="left">\n    <i c8y-icon="plus"></i> {{\'Add simulator\' | translate}}\n  </button>\n</div>\n\n<div class="alert alert-warning" ng-show="hasSimulationMaximum()" translate>\n  Maximum of simulated devices reached.\n</div>\n\n<form role="form" name="simulatorForm" class="panel-body" ng-show="newSim" novalidate>\n    <div class="row">\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'name\')}">\n        <label translate>Name</label>\n        <input type="text" class="form-control" name="name" placeholder="{{\'simulated device\' | translate}}" ng-model="newSim.name" required uib-tooltip="{{validationHints(\'name\')}}">\n        <br>\n        <label translate>Sensors</label>\n        <div class="alert alert-warning" ng-show="sensors.length == 0" translate>\n         No sensors available.\n        </div>\n      </div>\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'numberOfInstances\')}">\n        <label translate>Number of instances</label>\n        <input novalidate type="number" class="form-control" name="numberOfInstances" min="{{minIntances}}" max="{{maxInstances}}" ng-model="newSim.numberOfInstances" required uib-tooltip="{{validationHints(\'numberOfInstances\')}}">\n      </div>\n      <table class="table table-hover">\n        <tbody>\n        <tr ng-repeat="sensor in sensors">\n          <td>\n          <div class="form-group col-lg-12">\n            <input type="checkbox" ng-model="sensor.checked">\n            <span class="interact ng-binding" ng-click="sensor.checked = !sensor.checked">{{sensor.com_cumulocity_model_devicesimulator_SensorTemplate.name}}</span>\n          </div>\n            <span ng-show="sensor.checked">\n              <div class="form-group col-lg-4">\n                <label translate>Values</label>\n                <input type="text" class="form-control" required ng-pattern="/^(?:(?:\\d*\\.)?\\d+)(?:\\s*;\\s*(?:\\d*\\.)?\\d+)*$/" ng-model="sensor.values" uib-tooltip="{{\'Values separated by semicolon. e.g.: 12.1; 45.67; 8.2\' | translate}}" ng-required="sensor.checked" placeholder="{{\'e.g. 18; 25; 17\' | translate}}">\n              </div>\n              <div class="form-group col-lg-4">\n                <label translate>Interval (in seconds)</label>\n                <input type="number" class="form-control" min="5" ng-model="sensor.intervall" uib-tooltip="{{\'Minimum 5\' | translate}}" required>\n              </div>\n            </span>\n          </td>\n         </tr>\n        </tbody>\n      </table>\n\n    </div>\n    <div class="form-group">\n      <button class="btn btn-primary" ng-click="save()" ng-disabled="disableSave()" translate>Save</button>\n      <button class="btn btn-default" ng-click="cancelAdd()" translate>Cancel</button>\n    </div>\n  </form>\n\n  <div class="alert alert-warning" ng-show="simulators.length === 0" translate>\n    No simulated devices available.\n  </div>\n\n  <table class="table table-hover">\n  <tr ng-repeat="simulator in simulators">\n    <td style="width:30px" class="text-center">\n    </td>\n\n    <td>\n       {{getSimulatorName(simulator)}}\n      <small class="text-muted hidden-sm hidden-xs" style="margin-right:10px">\n        <strong>{{\'Number of instances\' | translate}}:</strong>\n        {{simulator.com_cumulocity_model_devicesimulator_SimulatorConfiguration.numberOfInstances}}\n      </small>\n      <small ng-if="simulator.com_cumulocity_model_devicesimulator_SimulatorConfiguration.state" class="text-muted hidden-sm hidden-xs" style="margin-right:10px">\n        <strong>{{\'State\' | translate}}:</strong>\n        {{simulator.com_cumulocity_model_devicesimulator_SimulatorConfiguration.state | translate}}\n      </small>\n    </td>\n\n    <td class="text-right">\n      <button class="btn btn-info btn-xs showOnHover" title="{{\'Run device\' | translate}}" ng-show="canRun(simulator)" ng-click="changeState(simulator, \'RUNNING\')">\n        <i class="fa fa-play"></i>\n      </button>\n      <button class="btn btn-info btn-xs showOnHover" title="{{\'Pause device\' | translate}}" ng-click="changeState(simulator, \'PAUSED\')" ng-show="!canRun(simulator)">\n        <i class="fa fa-pause"></i>\n      </button>\n      <button class="btn btn-danger btn-xs showOnHover" title="{{\'Delete device\' | translate}}" ng-click="deleteSimulator(simulator)">\n        <i c8y-icon="times"></i>\n      </button>\n    </td>\n  </tr>\n</table>\n</div>\n',e.put("administration_simulator/views/simulator.html",n),e.put("/apps/administration/simulator/views/simulator.html",n)}angular.module("c8y.parts.simulator").run(["$templateCache",e])}();