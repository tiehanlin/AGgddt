/* core_trackerRegistration 8.7.2 2017-08-02T09:55:49+00:00 e22b35b1d531 (hotfix/8.7.2) tip */
!function(){"use strict";function r(r,t,e){var n="gears",a=e("Tracker registration"),i=e("Devices"),s="trackerregistration",o="core_trackerRegistration/views/";r.addNavigation({parent:i,name:a,priority:3e3,icon:n,path:s}),t.when("/"+s,{name:a,icon:n,templateUrl:o+"index.html"})}angular.module("c8y.tracking.trackerRegistration",[]).config(r),r.$inject=["c8yNavigatorProvider","c8yViewsProvider","gettext"]}(),function(){"use strict";function r(r,t,e,n,a,i,s,o,c,l,u,d,g,m,f,p,h,k){function v(){y(),M(),$(),x(),A(),B(),L()}function y(r){return o.list(r).then(b)}function b(r){R();var e=w();S(r,e),t.paging=r.paging}function R(){t.newDeviceRequests||(t.newDeviceRequests=[])}function w(){return _.map(t.newDeviceRequests,"id")}function S(r,e){_.forEach(r,function(r){_.includes(e,r.id)||t.newDeviceRequests.push(r)})}function M(){N(),I()}function N(){d.addListener(t.$id,"/bootstrap",d.realtimeActions().UPDATE,D),d.start(t.$id,"/bootstrap"),t.$on("$destroy",function(){d.stop(t.$id,"/bootstrap")})}function D(r,e){_.forEach(t.newDeviceRequests,function(r){r.id===e.id&&(r.status=e.status,a.success(m("New device has been connected!")))})}function I(){d.addListener(t.$id,"/managedobjects/*",d.realtimeActions().CREATE,T),d.start(t.$id,"/managedobjects/*"),t.$on("$destroy",function(){d.stop(t.$id,"/managedobjects/*")})}function T(r,e){if(s.isDevice(e)){var i=e.c8y_Mobile&&e.c8y_Mobile.imei,o=_.find(t.newDeviceRequests,{id:i});if(o){var c=[],l=P(e).then(_.partial(or,o)),u=k.find(i),d=u&&u.trackerPhoneNumber;d&&_.merge(e,{c8y_Mobile:{msisdn:u.trackerPhoneNumber}});var g=_.find(t.trackerModels,{name:u&&u.trackerModelName}),f=g&&g.communicationMode;if(f&&_.merge(e,{c8y_CommunicationMode:{mode:g.communicationMode}}),d||f){var p=s.save(e);c.push(p)}c.push(l),n.all(c).then(function(){k.cleanByIMEI(i),a.success(m("New tracker has been added to group!"))})}}}function P(r){return C().then(function(t){return l.addChildAsset(t,r)})}function C(){return c.list({fragmentType:"c8y_MyTrackersGroup"}).then(function(r){return r.length||r.push(E()),r[0]})}function E(){return c.create({name:f.getString("My trackers"),c8y_MyTrackersGroup:{}}).then(i.getResData)}function $(){p.list().then(q)}function q(r){t.trackerModels=r}function x(r){t.registration={status:r||0,tracker:{},currentTrackerName:"",action:""}}function A(r){g.changeTitle({title:m("Tracker registration"),subtitle:_.isUndefined(r)?"":f.getString("{{qty}} new devices",{qty:r})})}function B(){t.$watch("registration.currentTrackerName",F),t.$watch("registration.status",V),t.$watch("registration.currentTrackerName",V),t.$watch("registration.action",V),t.$watch("registration.tracker",V,!0),t.$watch("newDeviceRequests.length",A)}function F(){O(),H()}function O(){t.registration.currentTracker=_.find(t.trackerModels,{name:t.registration.currentTrackerName})}function H(){if(t.forms.trackerForm&&t.forms.trackerForm.trackerIMEI&&""!==t.forms.trackerForm.trackerIMEI.$modelValue){var r=t.forms.trackerForm.trackerIMEI;r.$setValidity("pattern",function(){return!!r.$modelValue.match(j())})}}function j(){return t.registration.currentTracker?_r[t.registration.currentTracker.IMEILength]:qr}function V(){t.registration.status>0&&(t.registrationSaveObject={},_.assign(t.registrationSaveObject,t.registration,{timestamp:moment().local()}),G(),delete t.registrationSaveObject)}function G(){e.localStorage.setItem(Pr,JSON.stringify(t.registrationSaveObject))}function L(){$r=U(),$r&&$r.status&&$r.status>0&&($r.timestamp=r("absoluteDate")($r.timestamp),t.temporaryRegistration={},_.assign(t.temporaryRegistration,$r))}function U(){return JSON.parse(e.localStorage.getItem(Pr))}function Y(){t.registration.tracker={userPhoneNumber:"",trackerPassword:"",trackerIMEI:"",trackerPhoneNumber:""}}function J(){_.assign(t.registration,t.temporaryRegistration),W()}function z(){W()}function W(){delete t.temporaryRegistration,K()}function K(){e.localStorage.removeItem(Pr)}function Q(){var r=t.registration.currentTracker.supportedOperations[t.registration.action].messages;return 0===r.length||r.length>1||r[0].requiresFeedback}function X(r){return xr[r.status]}function Z(){return!!(t.registration.status<4&&t.registration.currentTracker&&t.registration.currentTracker.supportedOperations.registerBySMS&&t.registration.currentTracker.supportedOperations.updateBySMS)||(t.registration.currentTracker?(t.registration.status<2&&gr(2),t.registration.action=t.registration.currentTracker.supportedOperations.registerBySMS?"registerBySMS":"updateBySMS",kr()):t.registration.action="",!1)}function rr(){t.paging.loading=!0,t.paging.next().then(b).finally(function(){t.paging.loading=!1})}function tr(r){var e=_.indexOf(t.newDeviceRequests,r);t.newDeviceRequests[e].status=o.status.ACCEPTED}function er(r){o.accept(r).then(function(){tr(r),a.success(m("Device has been accepted!"))})}function nr(r){u({title:m("Confirm cancel?"),body:f.getString("Do you really want to cancel registration request for device with the id {{id}}?",r),status:"cancel"}).then(function(){o.cancel(r).then(function(){or(r),a.success(m("Device registration has been cancelled!"))})})}function ar(){return u({title:m("Confirm registration data reset?"),body:m("Do yout really want to clear all tracker registration data?")}).then(lr)}function ir(){t.newDeviceRequests=null,t.refreshLoading=!0,t.paging.refresh().then(b).finally(function(){t.refreshLoading=!1}),t.paging=null}function sr(){var r={id:t.registration.tracker.trackerIMEI};return o.create(r)}function or(r){var e=_.indexOf(t.newDeviceRequests,r);t.newDeviceRequests.splice(e,1)}function cr(){t.registration.action=""}function lr(){x(),Y(),K()}function ur(){return gr(2),mr(),fr(),k.add(dr()),h.startRegistration(t.registration).then(yr)}function dr(){return _.assign({},t.registration.tracker,{trackerModelName:t.registration.currentTrackerName})}function gr(r){t.registration.status=r}function mr(){_.forEach(["userPhoneNumber","trackerPhoneNumber"],function(r){t.registration.tracker[r]&&(t.registration.tracker[r]=t.registration.tracker[r].replace(/\+/g,"00"))})}function fr(){t.registration.messages=[],t.tracker=angular.copy(t.registration.tracker),_.forEach(t.registration.currentTracker.supportedOperations[t.registration.action].messages,function(r){t.registration.messages.push(t.$eval(r.text))}),delete t.tracker}function pr(){return h.finishRegistration(t.registration).then(sr).then(vr)}function hr(){gr(2),kr()}function kr(){var r=t.registration,e=r.action,n=r.currentTracker.supportedOperations[e].defaults||{};e&&_.forOwn(n,function(e,n){var a=t.forms[Tr][n];a&&a.$dirty||(r.tracker[n]=e)})}function vr(){gr(0),a.warning(Er),lr(),ir()}function yr(){return Q()?void gr(3):sr().then(vr)}function br(r){return(2===t.registration.status||3===t.registration.status)&&t.registration.action&&t.registration.currentTracker.supportedOperations[t.registration.action].variables[r]}function Rr(){return(2===t.registration.status||3===t.registration.status)&&t.registration.action}function wr(){return 3===t.registration.status&&Q()}function Sr(){O(),cr()}function Mr(r){return i.validationHints(r,Ir)}function Nr(){k.commit()}var Dr=[{action:"registerBySMS",name:m("Register new tracker")},{action:"updateBySMS",name:m("Update tracker connection settings")}],Ir={required:m("This field is required!"),pattern:{userPhoneNumber:m("Valid phone number with country prefix required!"),trackerPhoneNumber:m("Valid phone number with country prefix required!"),trackerIMEI:m("Valid IMEI number required!")}},Tr="trackerForm",Pr="registrationProgress",Cr=[{caption:m("Tracker registration ready.")},{caption:m("Tracker model chosen.")},{caption:m("Action chosen.")},{caption:m("Initial configuration sms sent.")},{caption:m("Configuration complete.")}],Er=m('Tracker is now waiting for connection, finish the registration in the "Pending tracker registrations" after it connects to the server.'),$r={},_r={10:/^[0-9]{10}$/,15:/^[0-9]{15}$/},qr=/[\s\S]*/g,xr={};xr[o.status.PENDING_ACCEPTANCE]=1,xr[o.status.WAITING_FOR_CONNECTION]=2,xr[o.status.ACCEPTED]=3,t.$on("$destroy",Nr),t.actionButtons=Dr,t.forms={},t.registration={},t.statuses=Cr,t.trackerModels=[],t.variables={},t.cancelTempRegistration=z,t.confirmTempRegistration=J,t.doesActionRequireFeedback=Q,t.getTrackerIMEIPattern=j,t.invalid=angular.bind(i,i.invalid,t.forms,Tr),t.isThereActionChoice=Z,t.listOrderExpression=[X,"id"],t.loadNext=rr,t.newDeviceRequestsStatus=o.status,t.onClickAccept=er,t.onClickCancel=nr,t.onClickResetRegistrationData=ar,t.refresh=ir,t.setActionStatus=hr,t.sendFirstConfigurationBatch=ur,t.sendSecondConfigurationBatch=pr,t.shouldDisplayField=br,t.shouldDisplayFirstSendButton=Rr,t.shouldDisplaySecondSendButton=wr,t.statusIcon=o.statusIcon,t.statusClass=o.statusClass,t.updateTrackerData=Sr,t.validationHints=Mr,v()}angular.module("c8y.tracking.trackerRegistration").controller("trackerRegistrationCtrl",r),r.$inject=["$filter","$scope","$window","$q","c8yAlert","c8yBase","c8yDevices","c8yDeviceRegistration","c8yDeviceGroup","c8yInventory","c8yModal","c8yRealtime","c8yTitle","gettext","gettextCatalog","trackerModelsSvc","trackerRegistrationSvc","trackerRegistrationHistorySvc"]}(),function(){"use strict";function r(r,t){function e(r){var t=a(r,0);return i(t)}function n(t){for(var e=[],n=1;n<(t.messages||[]).length;n++){var s=a(t,n);e.push(i(s))}return r.all(e)}function a(r,t){var e={outboundSMSMessageRequest:{address:["tel:"+r.tracker.trackerPhoneNumber],senderAddress:"tel:"+(r.tracker.userPhoneNumber||""),outboundSMSTextMessage:{message:r.messages[t]}}};return e}function i(r){return t.sendSms(r)}return{startRegistration:e,finishRegistration:n}}angular.module("c8y.tracking.trackerRegistration").factory("trackerRegistrationSvc",r),r.$inject=["$q","c8yMessaging"]}(),function(){"use strict";function r(r){function t(r){var t=_.cloneDeep(r);return delete t.trackerPassword,t}function e(r){n(r),k.history.push(t(r)),a()}function n(r){return _.merge(r,{timestamp:moment().local().format()})}function a(){var r=k.history.length;r>f&&(k.history=_.drop(k.history,r-f))}function i(){return k.history}function s(){var r=moment().local().subtract(p,h);_.remove(k.history,function(t){return moment(t.timestamp).isBefore(r)})}function o(){s(),r.set(m,k)}function c(){r.get(m).then(function(r){k=r||k})}function l(r){return _.findLast(k.history,function(t){return t.trackerIMEI===r})}function u(){k={history:[]}}function d(){c()}function g(r){_.remove(k.history,function(t){return t.trackerIMEI===r})}var m="registrationDataHistory",f=500,p=1,h="month",k={history:[]},v={};return d(),v.commit=o,v.pull=c,v.clearHistory=u,v.add=e,v.list=i,v.find=l,v.cleanByIMEI=g,v}r.$inject=["c8yUserPreferences"],angular.module("c8y.tracking.trackerRegistration").factory("trackerRegistrationHistorySvc",r)}(),function(){"use strict";function r(r){var t;t='<div ng-controller="trackerRegistrationCtrl">\r\n\r\n  <div class="row">\r\n    <div class="col-sm-6 col-sm-offset-3">\r\n      <div class="alert alert-info" ng-show="temporaryRegistration && forms.trackerForm.$pristine">\r\n        <p class="pull-right">\r\n          <a href="" ng-click="confirmTempRegistration()" class="btn btn-xs btn-default" translate>Yes</a>\r\n          <a href="" ng-click="cancelTempRegistration()" class="btn btn-xs btn-default" translate>No</a>\r\n        </p>\r\n        <span translate>You have registration data available saved on {{temporaryRegistration.timestamp}}, do you want to load it?</span>\r\n      </div>\r\n    </div>\r\n    <div class="clearfix"></div>\r\n    <form name="forms.trackerForm" class="col-lg-6" novalidate>\r\n      <h3>\r\n        <i c8y-icon="plug"></i>\r\n        {{\'New tracker registration\' | translate}}\r\n      </h3>\r\n\r\n    <div class="row">\r\n      <div class="col-sm-6">\r\n        <div class="form-group">\r\n          <label class="control-label" translate>\r\n            Select model\r\n          </label>\r\n\r\n          <div class="tracker-selection">\r\n            <div class="radio" ng-repeat="trackerModel in trackerModels">\r\n              <label data-tracker-model="{{trackerModel.name}}" ng-style="{\'background-image\': \'url(\' + trackerModel.image + \')\'}">\n                <input type="radio" name="modelRadio" ng-model="registration.currentTrackerName" ng-change="updateTrackerData()" value="{{trackerModel.name}}">\n                <span>{{trackerModel.displayName || trackerModel.name}}</span>\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class="col-sm-6">\r\n\r\n        <div class="btn-group form-group" ng-show="isThereActionChoice()">\r\n          <label class="control-label" translate>\r\n            Action\r\n          </label>\r\n          <div class="row">\r\n            <div class="col-lg-12" ng-repeat="actionButton in actionButtons">\r\n              <div class="radio">\r\n                <label>\r\n                  <input type="radio" name="actionRadio" ng-value="actionButton.action" ng-model="registration.action" ng-click="setActionStatus()">\r\n                  {{actionButton.name}}\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class="form-group" ng-if="shouldDisplayField(\'userPhoneNumber\')">\r\n          <label class="control-label" translate>\r\n            Your phone number\r\n          </label>\r\n          <div ng-class="{\'has-error\': invalid(\'userPhoneNumber\')}">\r\n              <input required name="userPhoneNumber" class="form-control" ng-model="registration.tracker.userPhoneNumber" ng-change="onRegistrationChange()" type="text" autocomplete="false" ng-pattern="/^(0{2}|\\+)[0-9]{8,15}$/" tooltip="{{validationHints(forms.trackerForm.userPhoneNumber)}}">\r\n          </div>\r\n        </div>\r\n\r\n        <div class="form-group" ng-if="shouldDisplayField(\'trackerPassword\')">\r\n          <label class="control-label" translate>\r\n            Tracker password\r\n          </label>\r\n          <div>\r\n              <input required name="trackerPassword" class="form-control" ng-model="registration.tracker.trackerPassword" ng-change="onRegistrationChange()" autocomplete="false" type="password">\r\n          </div>\r\n        </div>\r\n\r\n        <div class="form-group" ng-if="shouldDisplayField(\'trackerPhoneNumber\')">\r\n          <label class="control-label" translate>\r\n            Tracker phone number\r\n          </label>\r\n          <div ng-class="{\'has-error\': invalid(\'trackerPhoneNumber\')}">\r\n              <input required name="trackerPhoneNumber" class="form-control" ng-model="registration.tracker.trackerPhoneNumber" ng-change="onRegistrationChange()" autocomplete="false" type="text" ng-pattern="/^(0{2}|\\+)[0-9]{8,15}$/" tooltip="{{validationHints(forms.trackerForm.trackerPhoneNumber)}}">\r\n          </div>\r\n        </div>\r\n\r\n        <div class="form-group" ng-if="shouldDisplayField(\'trackerIMEI\')">\r\n          <label class="control-label" translate>\r\n            Tracker IMEI\r\n          </label>\r\n          <div ng-class="{\'has-error\': invalid(\'trackerIMEI\')}">\r\n              <input required name="trackerIMEI" class="form-control" ng-model="registration.tracker.trackerIMEI" ng-change="onRegistrationChange()" autocomplete="false" type="text" ng-pattern="getTrackerIMEIPattern()" tooltip="{{validationHints(forms.trackerForm.trackerIMEI)}}">\r\n          </div>\r\n        </div>\r\n\r\n        <div class="form-group" ng-if="shouldDisplayField(\'trackerAPN\')">\r\n          <label class="control-label" translate>\r\n            Tracker APN\r\n          </label>\r\n          <div ng-class="{\'has-error\': invalid(\'trackerAPN\')}">\r\n              <input required name="trackerAPN" class="form-control" ng-model="registration.tracker.trackerAPN" ng-change="onRegistrationChange()" autocomplete="false" type="text" tooltip="{{validationHints(forms.trackerForm.trackerAPN)}}">\r\n          </div>\r\n        </div>\r\n\r\n        <div class="form-group" ng-if="shouldDisplayField(\'trackerDomainName\')">\r\n          <label class="control-label" translate>\r\n            Tracker domain name\r\n          </label>\r\n          <div ng-class="{\'has-error\': invalid(\'trackerDomainName\')}">\r\n              <input required name="trackerDomainName" class="form-control" ng-model="registration.tracker.trackerDomainName" ng-change="onRegistrationChange()" autocomplete="false" type="text" tooltip="{{validationHints(forms.trackerForm.trackerDomainName)}}">\r\n          </div>\r\n        </div>\r\n\r\n        <div class="form-group" ng-if="shouldDisplayFirstSendButton()">\r\n          <button class="btn btn-default" ng-click="sendFirstConfigurationBatch()" ng-disabled="forms.trackerForm.$invalid">\r\n            <span translate ng-if="shouldDisplayFirstSendButton() && !shouldDisplaySecondSendButton()">\r\n              Send configuration SMS\r\n            </span>\r\n            <span translate ng-if="shouldDisplaySecondSendButton()">\r\n              Resend configuration SMS\r\n            </span>\r\n          </button>\r\n\r\n          <button class="btn btn-default" ng-show="registration.status > 0" ng-click="onClickResetRegistrationData()">\r\n            <span translate ng-if="registration.status !== 4">\r\n              Reset registration data\r\n            </span>\r\n            <span translate ng-if="registration.status === 4">\r\n              Register another tracker\r\n            </span>\r\n          </button>\r\n        </div>\r\n\r\n        <div ng-if="shouldDisplaySecondSendButton()">\r\n          <div class="alert alert-warning">\r\n            <p translate>\r\n              A confirmation SMS has been sent to the number provided in the previous step. Before finishing the configuration make sure that you have received it.\r\n            </p>\r\n          </div>\r\n          <a class="btn btn-primary" ng-click="sendSecondConfigurationBatch()" translate>\r\n            Finish configuration\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </form>\r\n    <div class="col-lg-6">\r\n       <h3>\r\n          <i c8y-icon="check-circle"></i>\r\n          {{\'Pending tracker registrations\' | translate}}\r\n       </h3>\r\n       <c8y-refresh-btn class=""></c8y-refresh-btn>\r\n\r\n\r\n       <table class="table table-hover" data-ng-show="newDeviceRequests.length">\r\n         <tr data-ng-repeat="d in newDeviceRequests | orderBy: listOrderExpression">\r\n           <td style="width:30px" class="text-center">\r\n             <i c8y-icon="{{statusIcon(d)}}" data-ng-class="statusClass(d)"></i>\r\n           </td>\r\n           <td class="word-break">\r\n             {{d.id}}\r\n             <small class="text-muted" style="margin-right:10px">\r\n               <strong>{{\'Status\' | translate}}:</strong> {{d.status | humanize | translate}}\r\n             </small>\r\n           </td>\r\n           <td class="text-right">\r\n             <a class="btn btn-xs btn-success" data-ng-click="onClickAccept(d)" data-ng-show="d.status==newDeviceRequestsStatus.PENDING_ACCEPTANCE">\r\n               <i c8y-icon="check-circle"></i> {{\'accept\' | translate}}\r\n             </a>\r\n             <a class="btn btn-xs btn-danger showOnHover" data-ng-click="onClickCancel(d)">\r\n               <i c8y-icon="times"></i> {{\'cancel\' | translate}}\r\n             </a>\r\n           </td>\r\n         </tr>\r\n       </table>\r\n\r\n       <c8y-load-more></c8y-load-more>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n',r.put("core_trackerRegistration/views/index.html",t),r.put("/apps/core/trackerRegistration/views/index.html",t)}angular.module("c8y.tracking.trackerRegistration").run(["$templateCache",r])}();