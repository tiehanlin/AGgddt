/* core_trafficLightWidget 8.7.2 2017-08-02T09:55:49+00:00 e22b35b1d531 (hotfix/8.7.2) tip */
!function(){"use strict";function t(t,e){t.add({name:"trafficLight",nameDisplay:e("Traffic light"),description:e("Visualizes traffic light based on the states of a device"),templateUrl:"core_trafficLightWidget/widget.html",configTemplateUrl:"core_trafficLightWidget/widget-config.html"})}t.$inject=["c8yComponentsProvider","gettext"],angular.module("c8y.trafficLightWidget",[]).config(t)}(),function(){"use strict";function t(t,e,n,i){function a(){e.detailRealtime(r.config.device.id,t).then(function(t){r.device=t,o()})}function o(){var t=r.device,e=r.config.mapping;t&&e&&n.attach(t,_.values(e))}function c(){var t=r.device,e=r.config.mapping,n={};return t&&e&&(n=_.transform(e,function(e,n,a){e[a]=Boolean(i.getRawValueForMapping(t,n))},{})),n}var r=this;_.assign(r,{$onInit:function(){_.assign(r,{updateStateValues:c}),t.$watch("vm.config",a,!0)}})}t.$inject=["$scope","c8yInventory","c8yComputedProperties","ScadaWidgetUtilSvc"],angular.module("c8y.trafficLightWidget").component("trafficLightWidget",{templateUrl:"core_trafficLightWidget/traffic-light.html",bindings:{config:"<"},controller:t,controllerAs:"vm"})}(),function(){"use strict";function t(t,e,n,i,a,o,c,r){function s(t){n.detail(t).then(e.getResData).then(function(t){m.device=t})}function l(){m.states={red:r("red"),yellow:r("yellow"),green:r("green")},m.mapping||(m.mapping=_.reduce(_.keys(m.states),function(t,e){return t[e]={},t},{}))}function p(t){return _.isEmpty(t)?"":c.humanizeMapping(t)}function d(t){o.openSelector({selectSingle:!0,managedObject:m.device}).then(function(e){m.mapping[t]=e})}function g(t){a.openFieldbusSelector({device:m.device}).then(function(e){m.mapping[t]=e})}function f(t){i.edit(t).then(function(e){t.config=e})}function u(){var e=t.$parent.$parent.forms.componentForm;m.hasInvalidMapping=!1,_.forOwn(m.mapping,function(t,n){var i=h(n);m.hasInvalidMapping=m.hasInvalidMapping||i,e.$setValidity("statesMapping-"+n,!i)})}function h(t){return _.isEmpty(m.mapping[t])}var m=this;_.assign(m,{$onInit:function(){_.assign(m,{humanizeProperty:p,selectDevicePropertyForState:d,selectFieldbusPropertyForState:g,editComputedProperty:f,isMappingInvalidForState:h}),s(m.deviceId),l(),t.$watch("vm.mapping",u,!0)},$onChanges:function(t){var e=t.deviceId&&t.deviceId.currentValue;e&&s(e)}})}t.$inject=["$scope","c8yBase","c8yInventory","c8yComputedProperties","c8yDeviceDatabase","SchemaPropertiesSvc","ScadaWidgetUtilSvc","gettext"],angular.module("c8y.trafficLightWidget").component("statesMapping",{templateUrl:"core_trafficLightWidget/states-mapping.html",bindings:{deviceId:"<",mapping:"="},controller:t,controllerAs:"vm"})}(),function(){"use strict";function t(t){var e;e='<div class="form-group">\n  <label translate>States mapping</label>\n  <table class="table table-striped">\n    <thead>\n    <tr>\n      <th translate>State</th>\n      <th>\n        <span translate>Property</span>\n        <i c8y-icon="info-circle" uib-tooltip="{{\'The value of the selected data point or property must be one of the following to have the respective light on: true, 1, any non-empty string or any non-null number.\' | translate}}" class="text-info">\n        </i>\n      </th>\n      <th></th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat="(state, stateText) in vm.states" ng-class="{danger: vm.isMappingInvalidForState(state)}">\n      <td>{{stateText | translate}}</td>\n      <td ng-switch="vm.mapping[state].computed">\n        <button class="btn btn-xs btn-default" type="button" ng-switch-when="true" ng-click="vm.editComputedProperty(vm.mapping[state])">\n          <i c8y-icon="bolt"></i> {{vm.humanizeProperty(vm.mapping[state])}}\n        </button>\n        <span ng-switch-default>{{vm.humanizeProperty(vm.mapping[state])}}</span>\n      </td>\n      <td class="text-right">\n        <button class="btn btn-primary btn-xs showOnHover" type="button" title="{{\'Select device property\' | translate}}" ng-click="vm.selectDevicePropertyForState(state)">\n          <i c8y-icon="pencil"></i>\n        </button>\n        <button class="btn btn-primary btn-xs showOnHover" type="button" title="{{\'Select fieldbus property\' | translate}}" ng-click="vm.selectFieldbusPropertyForState(state)">\n          <i c8y-icon="tasks"></i>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n  <div class="alert-warning" ng-show="!vm.deviceId || vm.hasInvalidMapping" translate>\n    Please choose a device and complete the mapping for all light states.\n  </div>\n</div>\n',t.put("core_trafficLightWidget/states-mapping.html",e),t.put("/apps/core/trafficLightWidget/states-mapping.html",e),e='<div style="height:100%">\n  <svg width="100%" height="100%" viewBox="0 0 100 250" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <!-- Generated for Cumulocity -->\n    <title>Traffic Light</title>\n    <desc>Traffic light indicator</desc>\n    <defs>\n      <radialGradient cx="50%" cy="50%" fx="50%" fy="50%" r="50%" id="r">\n        <stop stop-color="#FF0000" offset="0%"></stop>\n        <stop stop-color="#D0011B" offset="100%"></stop>\n      </radialGradient>\n      <radialGradient cx="50%" cy="50.6905692%" fx="50%" fy="50%" r="50%" id="y">\n        <stop stop-color="#FFD54A" offset="0%"></stop>\n        <stop stop-color="#F6A623" offset="100%"></stop>\n      </radialGradient>\n      <radialGradient cx="50%" cy="50%" fx="50%" fy="50%" r="50%" id="g">\n        <stop stop-color="#D5FF7A" offset="0%"></stop>\n        <stop stop-color="#8CC83C" offset="100%"></stop>\n      </radialGradient>\n      <radialGradient cx="50%" cy="50%" fx="50%" fy="50%" r="50%" id="k">\n        <stop stop-color="#5F5A5A" offset="0%"></stop>\n        <stop stop-color="#484646" offset="100%"></stop>\n      </radialGradient>\n    </defs>\n    <g id="traffic-light">\n      <path d="M0,50.2337032 C0,22.4903784 22.3869348,0 50,0 C77.6139454,0 100,22.4899605 100,50.2337032 L100,199.766297 C100,227.509622 77.6130652,250 50,250 C22.3860546,250 0,227.51004 0,199.766297 L0,50.2337032 Z" id="Rectangle" fill="#5F5A5A"></path>\n      <circle id="Oval" stroke="#FFFFFF" stroke-width="4" fill="{{\'url(#\' + (vm.updateStateValues().red ? \'r\' : \'k\') + \')\'}}" cx="50" cy="50" r="33"></circle>\n      <circle id="Oval-Copy" stroke="#FFFFFF" stroke-width="4" fill="{{\'url(#\' + (vm.updateStateValues().yellow ? \'y\' : \'k\') + \')\'}}" cx="50" cy="125" r="33"></circle>\n      <circle id="Oval-Copy-2" stroke="#FFFFFF" stroke-width="4" fill="{{\'url(#\' + (vm.updateStateValues().green ? \'g\' : \'k\') + \')\'}}" cx="50" cy="200" r="33"></circle>\n    </g>\n  </svg>\n</div>\n',t.put("core_trafficLightWidget/traffic-light.html",e),t.put("/apps/core/trafficLightWidget/traffic-light.html",e),e='<states-mapping device-id="config.device.id" mapping="config.mapping">\n</states-mapping>\n',t.put("core_trafficLightWidget/widget-config.html",e),t.put("/apps/core/trafficLightWidget/widget-config.html",e),e='<traffic-light-widget config="child.config">\n</traffic-light-widget>\n\n',t.put("core_trafficLightWidget/widget.html",e),t.put("/apps/core/trafficLightWidget/widget.html",e)}angular.module("c8y.trafficLightWidget").run(["$templateCache",t])}();