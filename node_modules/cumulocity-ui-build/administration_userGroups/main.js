/* administration_userGroups 8.7.2 2017-08-02T09:53:15+00:00 79d3e7d78638 (hotfix/8.7.2) tip */
angular.module("c8y.parts.userGroups",[]).config(["c8yNavigatorProvider","c8yViewsProvider","gettext",function(n,e,t){"use strict";n.addNavigation({parent:t("Accounts"),name:t("User groups"),icon:"users",path:"usergroups",priority:4900,showIfPermissions:{anyRole:["ROLE_USER_MANAGEMENT_READ","ROLE_USER_MANAGEMENT_ADMIN"]}}),e.when("/usergroups",{templateUrl:"administration_userGroups/views/list.html"}),e.when("/usergroups/new",{templateUrl:"administration_userGroups/views/detail.html"}),e.when("/usergroups/:userGroupId",{templateUrl:"administration_userGroups/views/detail.html"})}]),angular.module("c8y.parts.userGroups").controller("userGroupListCtrl",["$scope","$location","c8yUserGroup","c8yBase","c8yModal","c8yTitle","gettext","gettextCatalog",function(n,e,t,r,a,s,o,i){"use strict";function l(e){n.groups||(n.groups=[]),n.groups=_.sortBy(n.groups.concat(e),function(n){return n.name.toLowerCase()}),n.paging=e.paging,m(n.groups.length)}function c(){t.list().then(l)}function u(n){e.path("/usergroups/"+n.id)}function p(e){a({title:o("Confirm delete?"),body:i.getString('Do you really want to remove the user group "{{name}}"?',e),status:"danger"}).then(angular.bind(t,t.remove,e)).then(angular.bind(r,r.removeFromList,n.groups,e))}function d(){n.refreshLoading=!0,n.paging.refresh().then(function(e){return n.groups=null,n.refreshLoading=!1,e}).then(l)}function g(){n.paging.loading=!0,n.paging.next().then(l).finally(function(){n.paging.loading=!1})}function m(n){s.changeTitle({title:o("User groups")})}n.navigateToDetail=u,n.refresh=d,n.onClickDelete=p,n.loadNext=g,c(),m()}]),angular.module("c8y.parts.userGroups").controller("userGroupDetailCtrl",["$scope","$routeParams","$location","c8yUserGroup","c8yPermissions","c8yAlert","c8yTitle","gettext","c8yModal","$q",function(n,e,t,r,a,s,o,i,l,c){"use strict";function u(e){n.roles=e,n.roleTypes=d(e),m()}function p(e){e.devicePermissions=e.devicePermissions||{};var t=e.roles&&e.roles.references||[];n.group=e,n._roles={},n.roles.forEach(function(e){n._roles[e.id]=!1}),t.forEach(function(e){n._roles[e.role.id]=!0})}function d(n){var e=[],t=new RegExp(["(",_.map(_.keys(U),function(n){return"_"+n}).join("|"),")$"].join(""));return n.forEach(function(n){var r=n.id,a=r.replace(t,""),s=_.find(e,{name:a}),o=r.match(/[^_]+$/)[0];U[o]&&(s||(s={name:a},e.push(s)),s[o]=n)}),e}function g(){r.listRoles().then(u)}function m(){return O?r.detail(O).then(function(n){return n.data}).then(p):void p({})}function E(e){return e.id?l({templateUrl:"administration_userGroups/views/saveConfirm.html",title:i("Confirm saving changes?"),scope:n.$new(!1)}):c.when()}function h(){var e=_.keys(n._roles).filter(function(e){return n._roles[e]});n.userGroupForm.$valid&&E(n.group).then(_.partial(r.save,n.group)).then(function(n){return O=n.id,r.updateRoles(n,e)}).then(_.partial(s.success,i("User group successfully saved"),null)).then(function(){t.path("usergroups")})}function f(n){var e=L[n];return e||(e=n.replace(/ROLE_/,"").toLowerCase().split("_").map(function(n){return n.substr(0,1).toUpperCase()+n.substr(1).toLowerCase()}).join(" ")),e}function v(e){var t=n._roles;_.keys(t).forEach(function(n){t[n]=!(!e||!n.match(e))})}function A(){v(/./)}function b(){v()}function y(){v(/READ/)}function T(){v(/ADMIN/)}function R(n){n&&o.changeTitle({title:n})}function N(n){var e={};return n&&n.customProperties&&_.forEach(n.customProperties,function(n,t){"object"==typeof n?e[t]=angular.toJson(n):e[t]=n}),e}function G(){return n._roles&&!(n._roles.ROLE_APPLICATION_MANAGEMENT_READ||n._roles.ROLE_APPLICATION_MANAGEMENT_ADMIN)}function C(){a.hasAnyRole(["ROLE_USER_MANAGEMENT_ADMIN"]).then(function(e){n.canEditUserGroup=e})}var O=e.userGroupId,L={ROLE_ACCOUNT:i("Account"),ROLE_ALARM:i("Alarms"),ROLE_APPLICATION_MANAGEMENT:i("Application management"),ROLE_APPLICATION_MANAGEMENT_SUBSCRIPTIONS:i("Application subscriptions management"),ROLE_AUDIT:i("Audits"),ROLE_BULK_OPERATION:i("Bulk operations"),ROLE_CEP_MANAGEMENT:i("CEP management"),ROLE_CONNECTIVITY:i("Connectivity"),ROLE_DATA_BROKER:i("Data broker"),ROLE_DEVICE:i("Device"),ROLE_DEVICE_BOOTSTRAP:i("Device bootstrap"),ROLE_DEVICE_CONTROL:i("Device control"),ROLE_EVENT:i("Events"),ROLE_IDENTITY:i("Identity"),ROLE_INVENTORY:i("Inventory"),ROLE_MEASUREMENT:i("Measurements"),ROLE_OPTION_MANAGEMENT:i("Option management"),ROLE_RETENTION_RULE:i("Retention rules"),ROLE_SIMULATOR:i("Simulators"),ROLE_SMART_RULE:i("Smart rules"),ROLE_SUPPORT:i("Support"),ROLE_TENANT_MANAGEMENT:i("Tenant management"),ROLE_TENANT_STATISTICS:i("Tenant statistics"),ROLE_USER_MANAGEMENT:i("User management"),ROLE_USER_MANAGEMENT_OWN:i("Own user management"),ROLE_USER_MANAGEMENT_PASSWORD_RESET:i("User management password reset")},U={READ:"READ",ADMIN:"ADMIN",CREATE:"CREATE",UPDATE:"UPDATE"};n.save=h,n.humanize=f,n.selectAll=A,n.selectAdmin=T,n.selectRead=y,n.clearAll=b,n.getGroupCustomProperties=N,n.shouldShowGroupApps=G,n.$watch("group.name",R),g(),C()}]),function(){"use strict";function n(n){function e(){return t[Math.floor(Math.random()*t.length)]}var t="ABCDEFGHJKLMNPQRSTUVWXYZabcdefhijkmnoprstuvwxyz123456789";this.devicesWarning="devices"===n.group.name,this.randomString=_.map(_.range(5),e).join(""),this.canConfirm=function(){return this.confirmString===this.randomString},this.$close=n.$close,this.$dismiss=n.$dismiss}angular.module("c8y.parts.userGroups").controller("UserGroupSaveConfirmCtrl",["$scope",n])}(),function(){"use strict";function n(n){var e;e='<div data-ng-controller="userGroupDetailCtrl">\n  <form name="userGroupForm" ng-submit="save(group)" class="col-lg-6" novalidate>\n\n    <div class="from-group">\n      <label translate>Name</label>\n      <input class="form-control" ng-model="group.name" ng-disabled="!canEditUserGroup" required ng-maxlength="254" maxlength="254">\n    </div>\n\n    <div class="panel panel-clean" style="margin-top:15px">\n      <div class="panel-heading" translate>Roles</div>\n      <div class="panel-body">\n        <div class="alert alert-info">\n          <i c8y-icon="info"></i>\n          <translate>\n            <b>Read</b>, <b>Create</b> and <b>Update</b> roles allow for READ, CREATE and UPDATE actions respectively.\n            <b>Admin</b> role allows for CREATE, UPDATE and DELETE actions.\n          </translate>\n        </div>\n        <div class="btn-group">\n          <button type="button" class="btn btn-default" ng-click="clearAll()" ng-disabled="!canEditUserGroup" translate>Clear all</button>\n          <button type="button" class="btn btn-default" ng-click="selectAll()" ng-disabled="!canEditUserGroup" translate>Select all</button>\n          <button type="button" class="btn btn-default" ng-click="selectRead()" ng-disabled="!canEditUserGroup" translate>Select all Read</button>\n          <button type="button" class="btn btn-default" ng-click="selectAdmin()" ng-disabled="!canEditUserGroup" translate>Select all Admin</button>\n        </div>\n      </div>\n\n      <table class="table">\n        <thead>\n          <tr>\n            <th translate>Type</th>\n            <th class="text-center" translate>Read</th>\n            <th class="text-center" translate>Admin</th>\n            <th class="text-center" translate>Create`role type`</th>\n            <th class="text-center" translate>Update</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="roleType in roleTypes">\n            <td>{{humanize(roleType.name) | translate}}</td>\n            <th class="text-center" ng-class="{success: _roles[roleType.READ.id]}"><input type="checkbox" ng-if="roleType.READ" ng-model="_roles[roleType.READ.id]" ng-disabled="!canEditUserGroup"></th>\n            <th class="text-center" ng-class="{success: _roles[roleType.ADMIN.id]}"><input type="checkbox" ng-if="roleType.ADMIN" ng-model="_roles[roleType.ADMIN.id]" ng-disabled="!canEditUserGroup"></th>\n            <th class="text-center" ng-class="{success: _roles[roleType.CREATE.id]}"><input type="checkbox" ng-if="roleType.CREATE" ng-model="_roles[roleType.CREATE.id]" ng-disabled="!canEditUserGroup"></th>\n            <th class="text-center" ng-class="{success: _roles[roleType.UPDATE.id]}"><input type="checkbox" ng-if="roleType.UPDATE" ng-model="_roles[roleType.UPDATE.id]" ng-disabled="!canEditUserGroup"></th>\n          </tr>\n        </tbody>\n      </table>\n\n    </div>\n\n    <div ng-repeat="(key, val) in getGroupCustomProperties(group)" class="form-group">\n      <label>{{humanize(key)}}</label>\n      <input class="form-control" ng-model="val" disabled="disabled">\n    </div>\n    <div class="panel panel-clean">\n      <div class="panel-heading">\n          <i c8y-icon="key"></i> <translate>Group permissions</translate>\n      </div>\n      <div acl-editor acl="group.devicePermissions"></div>\n    </div>\n\n    <div class="panel panel-clean" ng-show="shouldShowGroupApps()">\n      <div class="panel-heading">\n          <i c8y-icon="key"></i> <translate>Application access</translate>\n      </div>\n      <div application-access-editor allowed-applications="group.applications" disabled-edit="!canEditUserGroup"></div>\n    </div>\n\n    <button type="submit" class="btn btn-primary" ng-if="canEditUserGroup" ng-disabled="userGroupFrom.$invalid" translate>Save</button>\n\n  </form>\n</div>\n',n.put("administration_userGroups/views/detail.html",e),n.put("/apps/administration/userGroups/views/detail.html",e),e='<div data-ng-controller="userGroupListCtrl">\n\n  <div>\n    <c8y-refresh-btn class="pull-right" style="margin-bottom:20px"></c8y-refresh-btn>\n    <c8y-if-allowed any-role="[\'ROLE_USER_MANAGEMENT_ADMIN\']">\n      <a href="#/usergroups/new" class="btn btn-link pull-right">\n        <i c8y-icon="plus"></i> <translate>Create user group</translate>\n      </a>\n    </c8y-if-allowed>\n  </div>\n\n  <div class="alert alert-warning" data-ng-show="groups.length == 0" style="clear:both" translate>\n    No user groups found.\n  </div>\n\n  <table class="table table-hover">\n    <tr data-ng-repeat="group in groups">\n      <td class="interact word-break" ng-click="navigateToDetail(group)">\n        <span class="interact">{{group.name}}</span>\n      </td>\n      <td class="text-right word-nobreak">\n        <c8y-if-allowed any-role="[\'ROLE_USER_MANAGEMENT_ADMIN\']">\n          <a href="" class="btn btn-xs btn-danger showOnHover" title="{{\'Remove user group\' | translate}}" data-ng-click="onClickDelete(group)">\n            <i c8y-icon="times"></i>\n          </a>\n        </c8y-if-allowed>\n      </td>\n    </tr>\n  </table>\n\n  <c8y-load-more></c8y-load-more>\n\n</div>\n',n.put("administration_userGroups/views/list.html",e),n.put("/apps/administration/userGroups/views/list.html",e),e='<div ng-controller="UserGroupSaveConfirmCtrl as ctrl">\n  <div class="modal-header" data-ng-show="title">\n    <h3>{{title | translate}}</h3>\n  </div>\n  <div class="modal-body">\n    <p translate>\n      Are you sure you want to edit the user group?\n      Please enter "{{ctrl.randomString}}" to confirm:\n    </p>\n    <p ng-if="ctrl.devicesWarning" class="help-block bg-warning" style="padding:10px, 0, 10px, 0" translate>\n      Changing the user group "devices" can lead to security hole. E.g. if a device is compromised, attackers might\n      have extended access to the platform.\n    </p>\n    <form class="form-inline" style="margin-top:20px" ng-submit="ctrl.canConfirm() && ctrl.$close()">\n      <div class="form-group">\n        <label for="confirmString">{{\'Confirm\' | translate}}:&nbsp;</label>\n        <input type="text" class="form-control" id="confirmString" placeholder="{{\'Type here\' | translate}}" ng-model="ctrl.confirmString" c8y-autofocus>\n      </div>\n    </form>\n  </div>\n  <div class="modal-footer">\n    <button data-ng-disabled="!ctrl.canConfirm()" class="btn btn-primary" ng-click="ctrl.$close()" translate>Confirm</button>\n    <button class="btn btn-default" ng-click="ctrl.$dismiss()" translate>Cancel</button>\n  </div>\n</div>\n',n.put("administration_userGroups/views/saveConfirm.html",e),n.put("/apps/administration/userGroups/views/saveConfirm.html",e)}angular.module("c8y.parts.userGroups").run(["$templateCache",n])}();