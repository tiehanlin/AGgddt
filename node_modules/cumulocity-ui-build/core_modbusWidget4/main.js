/* core_modbusWidget4 8.7.2 2017-08-02T09:54:45+00:00 e22b35b1d531 (hotfix/8.7.2) tip */
!function(){"use strict";function e(e){e.init()}e.$inject=["modbusWidgetUiProvider"],angular.module("c8y.modbusWidget4",[]).config(e)}(),function(){"use strict";function e(e,n){function t(){l()}function l(){e.add(m)}var a="Modbus Device Widget",i=n("Fieldbus device widget"),o=n("Allows for seeing status and operating modbus device"),s="core_modbusWidget4/",m={name:a,nameDisplay:i,description:o,templateUrl:s+"widget.html",configTemplateUrl:s+"config.html"};return{init:t,registerWidget:l,$get:_.constant({})}}e.$inject=["c8yComponentsProvider","gettext"],angular.module("c8y.modbusWidget4").provider("modbusWidgetUi",e)}(),function(){"use strict";function e(e,n,t,l,a){function i(n){var t=e.when([]),l=_.get(n,"device");return l&&(t=o(l).then(function(e){return m(e,n)})),t}function o(a){var i=e.when(a),o=n.getId(a);return l.isFieldbusDevice(a)||(i=t.detail(o).then(n.getResData)),i}function s(e){return t.detailRealtime(e)}function m(e,n){var t=_.get(n,"categoriesConfig",[]);return u(e).then(function(l){if(l.length>0){var i=_.groupBy(l,b);t=_.map(t,function(t){var o=_.get(i,t.name);return _.defaults(t,{label:t.name||a("Uncategorized")}),t.elements=c(t.elements,l,e),t.elements=d(t.elements,o,e,n),t}),r(t,i,e,n)}else t=[];return t})}function u(e){return l.getDeviceTypeFromDevice(e).then(l.getElementsWithMeta).then(function(n){var t=n;return e.c8y_ModbusDevice||(t=_.filter(n,p)),t})}function c(e,n,t){return _.map(e,function(e){var a,i=l.findElementBestMatchingRefId(n,e.refId,e.type);return i&&(a=_.defaults(e,{name:i.name,type:i.meta.type.value,typeLabel:l.getElementTypeLabel(i,t),show:!0,label:i.name})),a})}function d(e,n,t,a){return _.forEach(n,function(n){_.find(e,{refId:l.getElementRefId(n)})||e.push({refId:l.getElementRefId(n),label:n.name,show:y(n,a),name:n.name,type:n.meta.type.value,typeLabel:l.getElementTypeLabel(n,t)})}),e}function r(e,n,t,i){_.forEach(n,function(n,o){_.find(e,{name:o})||e.push({name:o,label:o||a("Uncategorized"),elements:_.map(n,function(e){return{refId:l.getElementRefId(e),label:e.name,show:y(e,i),name:e.name,type:e.meta.type.value,typeLabel:l.getElementTypeLabel(e,t)}})})})}function g(n){var t=_.get(n,"device.id"),a=s(t),i=a.then(u),o=e.when(_.get(n,"categoriesConfig",v(t,n)));return e.all({fieldbusDevice:a,elements:i,categoriesConfig:o}).then(function(e){var n=_.map(e.categoriesConfig,function(n){return n.elements=_.map(n.elements,function(n){var t=l.findElementBestMatchingRefId(e.elements,n.refId,n.type);return t&&(_.assign(n,t),n=_.defaults(n,{label:t.name,show:!0})),n}),_.defaults(n,{label:n.name})});return _.forEach(n,function(e){e.elements=_.filter(e.elements,"show")}),{device:e.fieldbusDevice,categories:n}})}function v(e,n){var t=[];return o(e).then(function(e){return u(e).then(function(l){var a=_.groupBy(l,b);return r(t,a,e,n),t})})}function p(e){return e.meta.type===l.ElementType.REGISTER&&!e.input}function b(e){return e.category||""}function f(e){return _.some(e,function(e){return _.some(e.elements,"show")})}function h(e,n){var t=_.map(n,function(e){return{name:e.name,label:e.label,elements:_.compact(_.map(e.elements,function(e){return e.show?_.pick(e,["refId","label","type"]):void 0}))}},[]);_.set(e,"categoriesConfig",t),_.unset(e,"coils"),_.unset(e,"registers")}function y(e,n){return E(e)?w(e,n):I(e,n)}function E(e){return e.meta.type===l.ElementType.REGISTER}function w(e,n){var t=_.includes(n.registers,e.id);return t||(t=_.includes(n.registers,[e.input,e.number,e.startBit].join(","))),t||(t=_.includes(n.registers,e.number)),t||(t=!!_.find(n.registers,{number:e.number,startBit:e.startBit})),t}function I(e,n){var t=_.includes(n.coils,e.id);return t||(t=_.includes(n.coils,[e.input,e.number].join(","))),t||(t=_.includes(n.coils,e.number)),t}return{getConfigModel:i,updateConfigModel:h,getWidgetModel:g,isAtLeastOneElementSelected:f,isDiscreteIOSelectedInConfig:window.c8y_testing&&I,isRegisterSelectedInConfig:window.c8y_testing&&w}}e.$inject=["$q","c8yBase","c8yDevices","c8yDeviceDatabase","gettext"],angular.module("c8y.modbusWidget4").factory("modbusWidgetSvc",e)}(),function(){"use strict";function e(e,n){function t(){l()}function l(){n.getConfigModel(e.config).then(function(e){o.categoriesConfig=e})}function a(t){t&&i(t)&&n.updateConfigModel(e.config,t)}function i(t){var l=n.isAtLeastOneElementSelected(t);return e.forms.componentForm.modbusWidgetValidation.$setValidity("at-least-one-field-selected",l),o.atLeastOneElementSelected=l,l}var o=this;e.$watch("config.device",t),e.$watch("vm.categoriesConfig",a,!0)}e.$inject=["$scope","modbusWidgetSvc"],angular.module("c8y.modbusWidget4").controller("modbusWidgetConfigCtrl",e)}(),function(){"use strict";function e(e,n,t,l,a,i,o,s){function m(){i.getWidgetModel(e.child.config).then(function(e){_.assign(h,e)})}function u(e){return e.meta.enumType&&e.meta.enumValues&&2===e.meta.enumValues.length}function c(e){return e.meta.enumType&&e.meta.enumValues&&(1===e.meta.enumValues.length||e.meta.enumValues.length>2)}function d(e){return!e.meta.enumType}function r(e,n){var l="";return a.canUpdateElement(h.device,n)&&(l=t.validationHints(e,{required:o("This field is required!"),"value-in-register-range":s.getString(y,n&&n.meta&&n.meta.valuesRange.custom)})),l}function g(e){E.push(e)}function v(e){E=_.without(E,e),p(500)}function p(e){n(b,e)}function b(){_.forEach(h.categories,function(e){_.forEach(e.elements,function(e){f(e)||(e.meta.type===l.ElementType.DISCRETE_IO&&(e.valueObj=_.find(e.meta.enumValues,{value:a.getCurrentElementValue(h.device,e)})),e.meta.type===l.ElementType.REGISTER&&(e.meta.enumType?e.valueObj=_.find(e.meta.enumValues,{value:a.getCurrentElementValue(h.device,e)}):(e.valueObj=e.valueObj||{},e.valueObj.value=a.getCurrentElementValue(h.device,e))))})})}function f(e){return a.isElementChangePending(e)||_.includes(E,e)}var h=this,y=o("Value out of range! Allowed values from {{min | number}} to {{max | number}} with step {{step | number}}. Use up/down arrows to find nearest possible value."),E=[];_.assign(h,{isElementChangePending:a.isElementChangePending,canUpdateElement:a.canUpdateElement,updateElement:a.updateElement,shouldShowSwitch:u,shouldShowEnumSelect:c,shouldShowNumberInput:d,validationHints:r,focus:g,blur:v}),e.$watch("child.config",m),e.$watch("vm.categories",p,!0),e.$watch("vm.device",p,!0)}e.$inject=["$scope","$timeout","c8yBase","c8yDeviceDatabase","c8yModbusDevice","modbusWidgetSvc","gettext","gettextCatalog"],angular.module("c8y.modbusWidget4").controller("modbusWidgetCtrl",e)}(),function(){"use strict";function e(e){var n;n='<div ng-controller="modbusWidgetConfigCtrl as vm">\n  <div class="alert alert-warning" ng-show="vm.categoriesConfig.length === 0" translate>\n    No categories available.\n  </div>\n\n  <div ui-sortable="{handle: \'.handle-category\'}" ng-model="vm.categoriesConfig">\n    <div class="panel panel-default" ng-repeat="category in vm.categoriesConfig" style="margin-bottom: 2px">\n      <div class="panel-heading">\n        <div class="flex-row">\n          <div class="handle-category">\n            <i c8y-icon="bars" style="cursor: move"></i>\n          </div>\n\n          <div class="ui-sortable-title">\n            <label class="editable" ng-if="category.name">\n              <input class="form-control" ng-model="category.label">\n              <span>{{category.label}}</span>\n              <small class="text-primary"><i c8y-icon="pencil"></i></small>\n            </label>\n            <label class="editable text-muted" ng-if="!category.name">\n              <span>{{category.label | translate}}</span>\n            </label>\n          </div>\n\n          <div class="ui-sortable-actions text-right">\n            <button class="btn btn-link" ng-click="category.isExpanded = !category.isExpanded">\n              <i c8y-icon="chevron-down" ng-if="!category.isExpanded"></i>\n              <i c8y-icon="chevron-up" ng-if="category.isExpanded"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class="panel-body" uib-collapse="!category.isExpanded">\n        <table class="table table-vertical-middle form-group">\n          <thead>\n            <th style="width:5%">\n            </th>\n            <th style="width:5%">\n              <label>{{\'Show\' | translate}}</label>\n            </th>\n            <th style="width:34%">\n              <label>{{\'Label\' | translate}}</label>\n            </th>\n            <th style="width:28%">\n              <label>{{\'Name\' | translate}}</label>\n            </th>\n            <th style="width:28%">\n              <label>{{\'Type\' | translate}}</label>\n            </th>\n          </thead>\n          <tbody ui-sortable="{handle: \'.handle-property\'}" ng-model="category.elements">\n            <tr class="property" ng-repeat="element in category.elements">\n              <td style="width:5%" class="handle-property">\n                <i c8y-icon="bars" style="cursor: move"></i>\n              </td>\n              <td style="width:5%">\n                <input type="checkbox" ng-model="element.show">\n              </td>\n              <td style="width:34%">\n                <label class="editable">\n                  <input class="form-control" ng-model="element.label">\n                  <span>{{element.label}}</span>\n                  <small class="text-primary"><i c8y-icon="pencil"></i></small>\n                </label>\n              </td>\n              <td style="width:28%">\n                {{element.name}}\n              </td>\n              <td style="width:28%">\n                {{element.typeLabel | translate}}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n\n  <input type="hidden" name="modbusWidgetValidation" ng-model="modbusWidgetValidation"/>\n\n  <p ng-if="vm.categoriesConfig.length > 0 && !vm.atLeastOneElementSelected" style="margin-top: 20px" class="has-error">\n    <span style="display: inline-block" class="help-block">\n      <i c8y-icon="exclamation-triangle"></i>\n      <span translate>\n        At least one field needs to be selected.\n      </span>\n    </span>\n  </p>\n</div>\n',e.put("core_modbusWidget4/config.html",n),e.put("/apps/core/modbusWidget4/config.html",n),n='<div ng-controller="modbusWidgetCtrl as vm" class="modbusWidget" ng-init="wgtId = \'wgt\' + $id">\n  <div ng-repeat="category in vm.categories" ng-if="category.elements.length > 0" ng-init="catId = \'c\' + $index;" class="panel panel-default">\n    <div ng-show="category.name" class="panel-heading">\n      {{category.label}}\n    </div>\n    <div class="panel-body">\n      <div ng-repeat="element in category.elements" ng-init="elmId = \'e\' + $index">\n        <div class="modbus-category form-group">\n          <i c8y-icon="circle-o-notch" class="fa-spin" ng-style="{visibility: vm.isElementChangePending(element) ? \'initial\' : \'hidden\'}"></i>\n          <label for="{{wgtId+\'_\'+catId+\'_\'+elmId}}" ng-class="{\'notEditable\': !vm.canUpdateElement(vm.device, element)}" title="{{element.name}}">\n            {{element.label}}\n          </label>\n\n          <div class="control-container" ng-if="vm.shouldShowSwitch(element)" style="display:inline-block">\n            <button type="button" class="btn btn-default" style="z-index: 2" ng-disabled="!vm.canUpdateElement(vm.device, element) || vm.isElementChangePending(element)" uib-btn-checkbox btn-checkbox-true="element.meta.enumValues[1]" btn-checkbox-false="element.meta.enumValues[0]" ng-model="element.valueObj" ng-change="vm.updateElement(vm.device, element, element.valueObj)" title="{{element.valueObj.label}}">\n              <span ng-bind="element.valueObj.label"></span>\n            </button>\n          </div>\n          <form class="control-container" name="vm.elementValueForm" ng-if="vm.shouldShowEnumSelect(element) || vm.shouldShowNumberInput(element)" ng-submit="vm.updateElement(vm.device, element, element.valueObj)" novalidate>\n            <select ng-if="vm.shouldShowEnumSelect(element)" id="{{wgtId+\'_\'+catId+\'_\'+elmId}}" name="selectInput" class="form-control" ng-model="element.valueObj" ng-change="vm.updateElement(vm.device, element, element.valueObj)" ng-options="enumValue as enumValue.label for enumValue in element.meta.enumValues" ng-required="vm.shouldShowEnumSelect(element)" ng-disabled="vm.isElementChangePending(element) || !vm.canUpdateElement(vm.device, element)" ng-focus="vm.focus(element)" ng-blur="vm.blur(element)">\n            </select>\n            <div class="input-group" ng-if="vm.shouldShowNumberInput(element)" ng-class="{\'has-error\': vm.elementValueForm.numberInput.$dirty && vm.elementValueForm.numberInput.$invalid}" uib-tooltip="{{vm.validationHints(vm.elementValueForm.numberInput, element)}}" tooltip-append-to-body="true">\n              <input id="{{wgtId+\'_\'+catId+\'_\'+elmId}}" name="numberInput" class="form-control text-right" ng-class="{\'input-border\': vm.canUpdateElement(vm.device, element)}" type="number" validate-value-in-register-range="element.meta.valuesRange.custom" ng-required="vm.canUpdateElement(vm.device, element) && vm.shouldShowNumberInput(element)" ng-disabled="!vm.canUpdateElement(vm.device, element) || vm.isElementChangePending(element)" ng-model="element.valueObj.value" min="{{element.meta.valuesRange.custom.min}}" max="{{element.meta.valuesRange.custom.max}}" step="{{element.meta.valuesRange.custom.step}}" ng-focus="vm.focus(element)" ng-blur="vm.blur(element)">\n              <span class="input-group-addon" ng-show="element.unit && vm.shouldShowNumberInput(element)" title="{{element.unit}}" ng-bind="element.unit"></span>\n              <span class="input-group-btn" ng-if="vm.canUpdateElement(vm.device, element)">\n                <button class="btn btn-primary" ng-disabled="vm.isElementChangePending(element) || !vm.canUpdateElement(vm.device, element) || vm.elementValueForm.$invalid" translate>Set</button>\n              </span>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',e.put("core_modbusWidget4/widget.html",n),e.put("/apps/core/modbusWidget4/widget.html",n)}angular.module("c8y.modbusWidget4").run(["$templateCache",e])}();