/* core_deviceDatabase4 8.7.2 2017-08-02T09:54:11+00:00 e22b35b1d531 (hotfix/8.7.2) tip */
!function(){"use strict";angular.module("c8y.deviceDatabase4",[]).constant("deviceDatabasePath","core_deviceDatabase4")}(),function(){"use strict";function e(e,t,n,a,i,r,s,l,o,c){function u(){d(),m().then(p)}function d(){i.changeTitle({title:o("Device database")})}function m(){return a.getAvailableDeviceTypes()}function p(t){e.deviceTypes||(e.deviceTypes=[]),_.forEach(t,function(t){e.deviceTypes.push(t)}),e.paging=t.paging||{refresh:!0}}function g(){e.deviceTypes=null,e.refreshLoading=!0,m().then(p).finally(function(){e.refreshLoading=!1})}function v(){e.paging.loading=!0,m().finally(function(){e.paging.loading=!1})}function y(e){var n=e&&e.id||"new";t.path("/device-types/"+n)}function f(){y()}function b(){a.importDeviceTypeWithUI().then(h,T)}function h(){s.success(o("New device type imported!")),g()}function T(e){_.isObjectLike(e)&&(e.errorMessage?s.danger(c.getString('Could not import device type due to: "{{errorMessage}}"!',{errorMessage:l.getTranslatedServerMessage(e.errorMessage)})):s.danger(o("Could not import device type!")))}function D(e){return a.exportDeviceTypeAndSaveAs(e)}function I(t){r({title:o("Confirm delete?"),body:c.getString('Do you really want to remove device type "{{name}}"? Connected devices of this type will become unavailable.',t),status:"danger"}).then(_.partial(n.remove,t)).then(_.partial(_.pull,e.deviceTypes,t)).then(_.partial(s.success,o("Device type successfully removed!")))}e.refresh=g,e.loadNext=v,e.navigateToDetails=y,e.addDeviceType=f,e.importDeviceType=b,e.onClickExport=D,e.onClickDelete=I,u()}angular.module("c8y.deviceDatabase4").controller("deviceTypesListCtrl",["$scope","$location","c8yInventory","c8yDeviceDatabase","c8yTitle","c8yModal","c8yAlert","c8yLocales","gettext","gettextCatalog",e])}(),function(){"use strict";function e(e,t,n,a,i,r,s,l,o,c,u,d){function m(){return"new"===B}function p(){return g(B).then(f).then(b)}function g(e){return v(e).then(y)}function v(e){return n.when(m()?s.getEmptyDeviceType():s.getDeviceType(e))}function y(t){e.deviceType=t,e.formValue={fieldbusType:t.fieldbusType}}function f(){e.discreteOutputsCategorized=s.getDiscreteOutputsCategorized(e.deviceType),e.discreteInputsCategorized=s.getDiscreteInputsCategorized(e.deviceType),e.holdingRegistersCategorized=s.getHoldingRegistersCategorized(e.deviceType),e.inputRegistersCategorized=s.getInputRegistersCategorized(e.deviceType)}function b(){l.changeTitle({title:e.deviceType.name||u("New device type")})}function h(t){return S(t,s.getEmptyDiscreteOutput(),e.deviceType.c8y_Coils)}function T(t){return S(t,s.getEmptyDiscreteInput(),e.deviceType.c8y_Coils)}function D(t){return w(t,s.getEmptyHoldingRegister(e.deviceType),e.deviceType.c8y_Registers)}function I(t){return w(t,s.getEmptyInputRegister(),e.deviceType.c8y_Registers)}function S(e,t,n){return R("DiscreteIO",e,t,n)}function w(e,t,n){return R("Register",e,t,n)}function R(t,n,a,i){var r="edit"+t+"WithUI";return s[r](n||a,e.deviceType).then(_.partial(M,n,i)).then(f)}function M(t,n,a){if("canbus"!==e.deviceType.fieldbusType||a.number.startsWith("0x")||(a.number="0x"+a.number),t){var i=_.indexOf(n,t);n.splice(i,1,a)}else n.push(a)}function E(t){var n=u('Do you really want to remove coil "{{name}}"?');return A(t,e.deviceType.c8y_Coils,n)}function x(t){var n=u('Do you really want to remove discrete input "{{name}}"?');return A(t,e.deviceType.c8y_Coils,n)}function V(t){var n=u('Do you really want to remove holding register "{{name}}"?');return A(t,e.deviceType.c8y_Registers,n)}function C(t){var n=u('Do you really want to remove input register "{{name}}"?');return A(t,e.deviceType.c8y_Registers,n)}function A(e,t,n){return o({title:u("Confirm delete?"),body:d.getString(n,e),status:"danger"}).then(angular.bind(r,r.removeFromList,t,e)).then(f)}function $(e){return s.save(e).then(function(){c.success(u("Device type saved successfully!")),k=!0}).then(angular.bind(i,i.path,"/device-types"))}function O(){e.deviceType.fieldbusType?o({title:u("Confirm device type change?"),body:d.getString("By changing device type, all changes will be lost. Do you really want to proceed?")}).then(function(){s.removeAllElements(e.deviceType),f(),e.deviceType.fieldbusType=e.formValue.fieldbusType},function(){e.formValue.fieldbusType=e.deviceType.fieldbusType}):e.deviceType.fieldbusType=e.formValue.fieldbusType}function N(){var t=e.deviceType,n=e.deviceTypeForm;return n.$invalid||!t||0===t.c8y_Coils.length&&0===t.c8y_Registers.length}var B=t.deviceTypeId,k=!0;e.addDiscreteOutput=e.editDiscreteOutput=h,e.addDiscreteInput=e.editDiscreteInput=T,e.addHoldingRegister=e.editHoldingRegister=D,e.addInputRegister=e.editInputRegister=I,e.removeDiscreteOutput=E,e.removeDiscreteInput=x,e.removeHoldingRegister=V,e.removeInputRegister=C,e.isEmpty=_.isEmpty,e.isNew=m,e.save=$,e.saveDisabled=N,e.changeDeviceType=O,e.$watch("deviceType",function(e,t){t&&!_.eq(e,t)&&(k=!1)},!0),e.$on("$locationChangeStart",function(e,t){if(!k)return e.preventDefault(),o({title:u("Changes not saved"),body:u("Do you want to leave this page and discard the changes made?"),status:"warning",labels:{ok:u("Yes"),cancel:u("No")}}).then(function(){k=!0,a.location.href=t})}),p()}angular.module("c8y.deviceDatabase4").controller("deviceTypeDetailsCtrl",["$scope","$routeParams","$q","$window","$location","c8yBase","c8yDeviceDatabase","c8yTitle","c8yModal","c8yAlert","gettext","gettextCatalog",e])}(),function(){"use strict";function e(e,t,n,a,i,r,s,l,o,c,u){function d(){m(),p()}function m(){e.element=i.addDiscreteIOMeta(o)}function p(){e.categories=u}function g(){e.element.meta.updateStatus&&(e.element.meta.showStatus=!0)}function v(t){return y(),f(),a.invalid(e.forms,D,t)}function y(){var t=e.forms[D].name,n=e.element&&e.element.meta,a=!(!_.isUndefined(t.$modelValue)&&_.some(c,function(e){return(!n||n.original&&n.original.name!==e.name)&&e.name===t.$modelValue}));t.$setValidity(I.IS_VALID_NAME,a)}function f(){var t=e.forms[D].number,n=e.element&&e.element.meta,a=!(!_.isUndefined(t.$modelValue)&&_.some(c,function(a){return(!n||n.original&&n.original.number!==a.number)&&a.input===e.element.input&&a.number===t.$modelValue}));t.$setValidity(I.IS_VALID_NUMBER,a)}function b(e){return a.validationHints(e,S)}function h(){e.element&&(e.element.meta=e.element.meta||{},e.element.meta.showStatus?e.element.meta.enumValues||(e.element.meta.enumType=!0,e.element.meta.enumValues=_.cloneDeep(i.MetaDefaults.discreteIO.enumValues)):(e.element.meta.enumType=!1,e.element.meta.enumValues=void 0))}function T(){t.close(i.removeDiscreteIOMeta(e.element))}e.forms={};var D="element",I={IS_REQUIRED:"required",IS_VALID_NAME:"valid-name",IS_VALID_NUMBER:"valid-number"},S={};S[I.IS_REQUIRED]=s("This field is required!"),S[I.IS_VALID_NAME]=s("Name should be unique among coils and discrete inputs!"),S[I.IS_VALID_NUMBER]=s(o.input?"Number should be unique among discrete inputs!":"Number should be unique among coils!"),e.onUpdateStatusCheckboxClicked=g,e.alarmSeverities=r.severityList,e.invalid=v,e.validationHints=b,e.save=T,e.dismiss=t.dismiss,e.$watch("element.meta.showStatus",h),d()}angular.module("c8y.deviceDatabase4").controller("discreteIOModalCtrl",["$scope","$uibModalInstance","$q","c8yBase","c8yDeviceDatabase","c8yAlarms","gettext","gettextCatalog","element","existingElements","existingCategories",e])}(),function(){"use strict";function e(e,t,n,a,i,r,s,l,o,c,u,d){function m(){p(),g()}function p(){e.element=i.addRegisterMeta(o)}function g(){e.categories=u}function v(){e.element.meta.updateStatus&&(e.element.meta.showStatus=!0)}function y(){var t=x(e.element.startBit);e.element.noBits>t&&(e.element.noBits=t)}function f(){e.element.meta.valuesRange=i.getValuesRange(e.element)}function b(e){var t=l.getString("no value");return _.isUndefined(e)||_.isNaN(e)||(t=e),["(",t,")"].join("")}function h(t){return T(t),D(t),I(),S(),w(),R(),a.invalid(e,V,t)}function T(t){if("number"===t&&"canbus"===d){var n=e[V].number,a=n.$modelValue;if(!a)return void n.$setValidity(C.IS_VALID_MESSAGEID,!0);a.startsWith("0x")&&(a=a.substring(2));var i=parseInt(a,16),r=i.toString(16)===a.toLowerCase();n.$setValidity(C.IS_VALID_MESSAGEID,r),n.$setValidity(C.IS_MIN,!r||i>=0),n.$setValidity(C.IS_MAX,!r||i<=parseInt("FFFFFFF",16))}}function D(t){if("browsePath"===t){var n=e[V].browsePath.$viewValue,a=/^|((\d)+:[^\/]+)([\/](\d)+:[^\/]+)*$/;e[V].browsePath.$setValidity(C.IS_VALID_BROWSEPATH,a.test(n))}}function I(){var t=e[V].name,n=e.element&&e.element.meta,a=!(!_.isUndefined(t.$modelValue)&&_.some(c,function(e){return(!n||n.original.name!==e.name)&&e.name===t.$modelValue}));t.$setValidity(C.IS_VALID_NAME,a)}function S(){var t=e[V].number,n=e[V].startBit,a=e[V].noBits,r=e.element&&e.element.meta,s=!(t&&!_.isUndefined(t.$modelValue)&&!_.isUndefined(n.$modelValue)&&!_.isUndefined(a.$modelValue)&&_.some(c,function(s){var l=t.$modelValue;return"canbus"===d&&l&&l.indexOf("0x")===-1&&(l="0x"+l),(!r||!(r.original&&r.original.number===s.number&&r.original.startBit===s.startBit))&&s.input===e.element.input&&s.number===l&&(s.startBit===n.$modelValue&&s.noBits===a.$modelValue||i.areOverlappingRegisters(s,{startBit:n.$modelValue,noBits:a.$modelValue}))}));t&&t.$setValidity(C.IS_VALID_BIT_RANGE,s),n&&n.$setValidity(C.IS_VALID_BIT_RANGE,s),a&&a.$setValidity(C.IS_VALID_BIT_RANGE,s)}function w(){var t=e[V].measurementType,n=e[V].measurementSeries,a=e.element&&e.element.meta,i=!(a&&a.sendMeasurement&&!_.isUndefined(t.$modelValue)&&!_.isUndefined(n.$modelValue)&&_.some(c,function(i){return!(!_.isUndefined(e.element.id)&&!_.isUndefined(i.id)&&e.element.id===i.id||a&&a.original.number===i.number&&a.original.startBit===i.startBit&&a.original.input===i.input)&&(i.measurementMapping&&i.measurementMapping.type===t.$modelValue&&i.measurementMapping&&i.measurementMapping.series===n.$modelValue)}));t.$setValidity(C.IS_VALID_MEASUREMENT,i),n.$setValidity(C.IS_VALID_MEASUREMENT,i)}function R(){var t=e[V].noBits;if(t){var n=!e.element.signed||e.element.signed&&!_.isUndefined(t.$modelValue)&&t.$modelValue>1;t.$setValidity(C.IS_VALID_NO_BITS_FOR_SIGNED_REGISTER,n)}}function M(e,t){var n=_.cloneDeep(A);return t&&t.validateValueInRegisterRange&&(n[C.IS_VALUE_IN_REGISTER_RANGE]=l.getString($,t.validateValueInRegisterRange)),a.validationHints(e,n)}function E(){t.close(i.removeRegisterMeta(e.element))}function x(e){return"modbus"===d?16-e:64-e}var V="form_element",C={IS_REQUIRED:"required",IS_VALID_NAME:"valid-name",IS_VALID_BIT_RANGE:"valid-bit-range",IS_VALID_MEASUREMENT:"valid-measurement",IS_VALUE_IN_REGISTER_RANGE:"value-in-register-range",IS_VALID_NO_BITS_FOR_SIGNED_REGISTER:"no-bits-for-signed-register",IS_VALID_MESSAGEID:"valid-messageID",IS_VALID_BROWSEPATH:"valid-browsePath",IS_MIN:"min",IS_MAX:"max",IS_UNIQUE:"unique"},A={};A[C.IS_REQUIRED]=s("This field is required!"),A[C.IS_VALID_NAME]=s("Name should be unique among registers!"),A[C.IS_VALID_BIT_RANGE]=s("Chosen number, start bit or number of bits overlap with another register!"),A[C.IS_VALID_MEASUREMENT]=s("Chosen measurement type and series are already used by another register!"),A[C.IS_MIN]=s("Value cannot be lower than minimum!"),A[C.IS_MAX]=s("Value cannot be greater than maximum!"),A[C.IS_UNIQUE]=s("Value cannot be used more than once!"),A[C.IS_VALID_NO_BITS_FOR_SIGNED_REGISTER]=s("At least two bits needed for signed register!"),A[C.IS_VALID_MESSAGEID]=s("Invalid hexadecimal number!"),A[C.IS_VALID_BROWSEPATH]=s("Invalid browse path!");var $=s("Value out of range! Allowed values from {{min | number}} to {{max | number}} with step {{step | number}}. Use up/down arrows to find nearest possible value.");"opcua"===d&&(A[C.IS_VALID_NAME]=s("Name should be unique among variables!"),A[C.IS_VALID_MEASUREMENT]=s("Chosen measurement type and series are already used by another variable!")),e.alarmSeverities=r.severityList,e.getValuePlaceholder=b,e.addEnumValue=i.addEmptyEnumValue,e.removeEnumValue=i.removeEnumValue,e.invalid=h,e.validationHints=M,e.onUpdateStatusCheckboxClicked=v,e.save=E,e.dismiss=t.dismiss,e.deviceType=d,e.noBitsMax=x,e.minOffset=Number.MIN_SAFE_INTEGER||-(Math.pow(2,53)-1),e.maxOffset=Number.MAX_SAFE_INTEGER||Math.pow(2,53)-1,e.$watch("element.startBit",y),e.$watch("element.min",f),e.$watch("element.max",f),e.$watch("element.noBits",f),e.$watch("element.multiplier",f),e.$watch("element.divisor",f),e.$watch("element.decimalPlaces",f),e.$watch("element.signed",f),m()}e.$inject=["$scope","$uibModalInstance","$q","c8yBase","c8yDeviceDatabase","c8yAlarms","gettext","gettextCatalog","element","existingElements","existingCategories","deviceType"],angular.module("c8y.deviceDatabase4").controller("registerModalCtrl",e)}(),function(){"use strict";function e(e,t,n,a,i){function r(){s().then(l)}function s(){return n.getPredefinedDeviceTypeInfos()}function l(e){_.forEach(e,function(e){T.push(e)})}function o(e){return n.downloadPredefinedDeviceTypeAndSaveAs(e.id)}function c(e){return p(),n.getPredefinedDeviceType(e.id).then(_.partial(m,e)).then(_.partial(v,e.name,e.fieldbusType))}function u(t){if(t.length){var n=new FileReader;n.onload=function(n){e.$apply(function(){try{var e=JSON.parse(n.target.result),r=e.c8y_ModbusDeviceTypeInfo,s=r&&r.name;d(),g(t[0],e),v(s,r.fieldbusType)}catch(e){p(),a.danger(i("Cannot load device type from selected file!"))}})},n.readAsText(t[0])}}function d(){D.predefined.info=null,D.predefined.deviceType=null}function m(e,t){D.predefined.info=e,D.predefined.deviceType=t}function p(){D.custom.file=null,D.custom.deviceType=null}function g(e,t){D.custom.file=e,D.custom.deviceType=t}function v(e,t){D.newName.edited||(D.newName.value=e),D.fieldbusType=t}function y(e){return D.predefined.info===e}function f(){D.newName.edited=!0}function b(){var e=_.cloneDeep(D.predefined.deviceType||D.custom.deviceType);e.name=D.newName.value,e.fieldbusType=D.fieldbusType,t.close(e)}function h(e){var t=h._cache=h._cache||{},a=t[e.id];return a||(a=t[e.id]=n.downloadPredefinedDeviceTypeHref(e).then(function(n){t[e.id]=n})),a.then?"":a}var T=[],D={predefined:{info:null,deviceType:null},custom:{file:null,deviceType:null},newName:{value:null,edited:!1}};e.selection=D,e.predefinedDeviceTypeInfos=T,e.downloadPredefinedDeviceType=o,e.onPredefinedDeviceTypeInfoSelected=c,e.isPredefinedDeviceTypeInfoSelected=y,e.onCustomDeviceTypeFileSelected=u,e.onNewNameEdited=f,e.import=b,e.cancel=t.dismiss,e.downloadFileName=n.predefinedDeviceTypeHrefFilename,e.downloadFileHref=h,r()}angular.module("c8y.deviceDatabase4").controller("deviceTypeImportCtrl",["$scope","$uibModalInstance","c8yDeviceDatabase","c8yAlert","gettext",e])}(),function(){"use strict";function e(e,t,n){this.humanize=t("humanize2"),this.selectSingle=e.selectSingle;var a=e.device,i=n.generatePaths(a);this.properties=_.map(i,n.createProperty)}angular.module("c8y.deviceDatabase4").controller("FieldbusPropertySelectorCtrl",["modalParams","$filter","fieldbusPropertyGenerator",e]),e.prototype.isParent=function(e){return 1===e.keyPath.length},e.prototype.orderByFn=function(e){return e.keyPath.join(".")}}(),function(){"use strict";function e(e,t,n,a,i,r,s,l,o){function c(e,t){var n,a=_.get(e,"meta.type"),i=_.get(e,"input"),r=u(t);return a&&(a===Vt.DISCRETE_IO?n=l(i?"Discrete input":"Coil (discrete output)"):a===Vt.REGISTER&&(n=l(i?"Input register":r?"Variable":"Holding register"))),n}function u(e){return _.some([_.get(e,"c8y_OPCUADevice"),_.get(e,"c8y_OPCUAGateway")])}function d(){return _.cloneDeep(_.assign({},Ot.common,Ot.deviceType))}function m(){return _.cloneDeep(_.assign({},Ot.common,Ot.element,Ot.discreteIO,Ot.discreteOutput))}function p(){return _.cloneDeep(_.assign({},Ot.common,Ot.element,Ot.discreteIO,Ot.discreteInput))}function g(e){var t=null;return t="canbus"===e.fieldbusType?_.cloneDeep(_.assign({},Ot.common,Ot.element,Ot.register,Ot.canbusRegister,Ot.holdingRegister)):_.cloneDeep(_.assign({},Ot.common,Ot.element,Ot.register,Ot.holdingRegister))}function v(){return _.cloneDeep(_.assign({},Ot.common,Ot.element,Ot.register,Ot.inputRegister))}function y(){return i.list({type:Ct}).then(function(e){return _.map(e,De)})}function f(t){var n=e.when(null),a=_.at(t,xt),i=_.find(a),r=/\/inventory\/managedObjects\/(\d+)/.exec(i),s=r&&r[1];return s&&(n=b(s)),n}function b(e){return i.detail(e).then(a.getResData).then(De)}function h(){return s({templateUrl:"core_deviceDatabase4/views/deviceTypeImport.html",controller:"deviceTypeImportCtrl"}).then(A)}function T(){return window.c8y&&window.c8y.collections&&window.c8y.collections.devicetypes}function D(){var t=T();return t&&e.when(_.map(t))}function I(){var e=[At,"index.json"].join("/");return(D()||t.get(e).then(a.getResData)).then(M)}function S(t){var n=(T()||{})[t],a=n&&_.clone(n._item);return a&&e.when(a)}function w(e){var n=[At,e+".json"].join("/");return S(e)||t.get(n).then(a.getResData)}function R(e){var n=e+".json",a=[At,n].join("/");return t.get(a).then(function(e){var t=JSON.stringify(e.data,null,2),a=e.headers("Content-Type"),i=new Blob([t],{type:a});saveAs(i,n)})}function M(e){return _.filter(e,function(e){return Et>=e.minFieldbusUI})}function E(e){var t=e.name+".json",n="application/json",a=JSON.stringify(x(e),null,2),i=new Blob([a],{type:n});saveAs(i,t)}function x(e){return e.c8y_ModbusDeviceTypeInfo=V(e),e.c8y_Coils=_.map(e.c8y_Coils,C),e.c8y_Registers=_.map(e.c8y_Registers,C),_.pick(e,["c8y_ModbusDeviceTypeInfo","c8y_Coils","c8y_Registers","c8y_useServerTime"])}function V(e){var t=e.c8y_ModbusDeviceTypeInfo||{};return _.assign(t,{name:e.name,minFieldbusUI:Et,fieldbusType:e.fieldbusType}),_.omit(t,["id","category","description"])}function C(e){return e.eventMapping&&(e.eventMapping=_.omit(e.eventMapping,["eventTemplate"])),e.alarmMapping&&(e.alarmMapping=_.omit(e.alarmMapping,["raiseAlarmTemplate"])),e.measurementMapping&&(e.measurementMapping=_.omit(e.measurementMapping,["sendMeasurementTemplate"])),_.omit(e,["id","originalName","originalNumber","originalStartBit","meta"])}function A(t){var n,r;return n=e.when(t).then(O).then(N).then(B).then(W).then(J),r=t.id?n.then(i.save):n.then(i.createConfirm).then(a.getResData).then($)}function $(t){return r.createIdentity(t,{type:"c8y_SmartRestDeviceIdentifier",externalId:t.name},{silentError:!0}).catch(function(n){var a=_.bind(e.reject,e,{errorMessage:n.data.message});return i.remove(t).then(a,a)})}function O(e){return e.type||(e.type=Ct),e}function N(e){return"canbus"===e.fieldbusType&&(e.c8y_useServerTime=!0),e}function B(t){return t.c8y_Coils=_.map(t.c8y_Coils,k),t.c8y_Registers=_.map(t.c8y_Registers,k),e.when(t)}function k(e){return e.id||(e.id=String(Math.random()).substr(2)),e}function U(e){var t=_.compact(P(e));return _.first(t)}function P(e){return[F(e),H(e),q(e),L(e)]}function F(e){return _.get(e,"id")}function H(e){return j(e,["input","number","startBit"])}function q(e){return j(e,["input","number"])}function L(e){return j(e,["number"])}function j(e,t){var n,a=_.map(t,_.propertyOf(e)),i=_.every(a,_.negate(_.isUndefined));return i&&(n=a.join(",")),n}function G(e,t,n){var a=_(e).map(function(e){return{score:z(e,t,n),element:e}}).reject(function(e){return _.isUndefined(e.score)}).orderBy("score",["asc"]).first();return _.get(a,"element")}function z(e,t,n){var a=e.meta.type.value===n,i=P(e),r=_.findIndex(i,_.negate(_.isUndefined)),s=_.indexOf(i,t);return a&&s>=0?r-s:void 0}function W(t){return t.c8y_Coils=_(t.c8y_Coils).sortBy("number").sortBy("input").value(),t.c8y_Registers=_(t.c8y_Registers).sortBy("startBit").sortBy("number").sortBy("input").value(),e.when(t)}function J(t){return t.com_cumulocity_model_smartrest_SmartRestTemplate=Q(t),e.when(t)}function Q(e){var t=[],n=[];return t.push(X(e)),t.push(K(e)),t.push(ee(e)),t.push(ne(e)),n.push(ge(e)),n.push(ve(e)),n.push(ye(e)),n.push(fe(e)),{requestTemplates:_.flattenDeep(t),responseTemplates:_.flattenDeep(n)}}function X(e){return{msgId:100,method:"PUT",contentType:"application/vnd.com.nsn.cumulocity.managedObject+json",placeholder:$t,resourceUri:"/inventory/managedObjects/"+$t,templateString:he([{key:"c8y_CoilStatus",value:new be(Y(e.c8y_Coils).map(function(e){return{key:e.name,value:$t,raw:!0}}).value())}]),values:["UNSIGNED"].concat(Y(e.c8y_Coils).map(function(){return"UNSIGNED"}).value())}}function K(e){return{msgId:101,method:"PUT",contentType:"application/vnd.com.nsn.cumulocity.managedObject+json",placeholder:$t,resourceUri:"/inventory/managedObjects/"+$t,templateString:he([{key:"c8y_RegisterStatus",value:new be(Y(e.c8y_Registers).map(function(e){return{key:e.name,value:$t,raw:!0}}).value())}]),values:["UNSIGNED"].concat(Y(e.c8y_Registers).map(function(){return"NUMBER"}).value())}}function Y(e){return _(e).filter(Z)}function Z(e){return e.statusMapping&&e.statusMapping.status}function ee(e){var t=[];return t.push(te(102,"EXECUTING")),t.push(te(103,"SUCCESSFUL")),t.push(te(104,"FAILED")),t}function te(e,t){return{msgId:e,method:"PUT",contentType:"application/vnd.com.nsn.cumulocity.operation+json",placeholder:$t,resourceUri:"/devicecontrol/operations/"+$t,templateString:he({status:t}),values:["UNSIGNED"]}}function ne(e){var t,n,a,i=[],r=300;return t=ae(r,e),i.push(t.tpls),n=le(t.msgId,e),i.push(n.tpls),a=me(n.msgId,e),i.push(a.tpls),i}function ae(e,t){var n=[],a=_.filter(t.c8y_Coils,"alarmMapping"),i=_.filter(t.c8y_Registers,"alarmMapping");return _.forEach(a,function(a){n.push(se(e,t,a.alarmMapping,ie(a))),a.alarmMapping.raiseAlarmTemplate=e++}),_.forEach(i,function(a){n.push(se(e,t,a.alarmMapping,re(a))),a.alarmMapping.raiseAlarmTemplate=e++}),{msgId:e,tpls:n}}function ie(e){return{c8y_ModbusSource:{coil:_.pick(e,"input","number")}}}function re(e){return{c8y_ModbusSource:{register:_.pick(e,["input","number","startBit","noBits"])}}}function se(e,t,n,a){return{msgId:e,method:"POST",contentType:"application/vnd.com.nsn.cumulocity.alarm+json",accept:"application/vnd.com.nsn.cumulocity.alarm+json",placeholder:$t,resourceUri:"/alarm/alarms",templateString:he([{key:"source",value:{id:$t}},{key:"type",value:n.type},{key:"status",value:"ACTIVE"},{key:"severity",value:n.severity},{key:"time",value:$t},{key:"text",value:n.text},{key:"c8y_ModbusSource",value:a.c8y_ModbusSource}]),values:["UNSIGNED",de(t)]}}function le(e,t){var n=[],a=[].concat(t.c8y_Coils).concat(t.c8y_Registers),i=_(a).filter("measurementMapping").groupBy(oe).value();return _.forEach(i,function(a,i){var r=_.map(a,ce);n.push(ue(e,t,i,r)),_.forEach(r,function(t){t.sendMeasurementTemplate=e,delete t.unit}),e++}),{msgId:e,tpls:n}}function oe(e){return e.measurementMapping.type}function ce(e){return e.measurementMapping.unit=e.unit||e.measurementMapping.unit,e.measurementMapping}function ue(e,t,n,a){return{msgId:e,method:"POST",contentType:"application/vnd.com.nsn.cumulocity.measurement+json",placeholder:$t,resourceUri:"/measurement/measurements",templateString:he(function(){var e=n,t={source:{id:$t},time:$t,type:e};return t[e]={},_.forEach(a,function(n){t[e][n.series]={value:"%n",unit:n.unit}}),t}()),values:["UNSIGNED",de(t)].concat(_.map(a,function(e){return"NUMBER"}))}}function de(e){var t="DATE";return e.c8y_useServerTime&&(t="NOW"),t}function me(e,t){var n=[],a=[].concat(t.c8y_Coils).concat(t.c8y_Registers);return _.forEach(a,function(a){_.isUndefined(a.eventMapping)||(n.push(pe(e,t,a,a.eventMapping)),a.eventMapping.eventTemplate=e++)}),{msgId:e,tpls:n}}function pe(e,t,n,a){return{msgId:e,method:"POST",contentType:"application/vnd.com.nsn.cumulocity.event+json",placeholder:$t,resourceUri:"/event/events",templateString:he([{key:"source",value:{id:$t}},{key:"time",value:$t},{key:"type",value:a.type},{key:"text",value:a.text},{key:n.name,value:$t}]),values:["UNSIGNED",de(t),"STRING"]}}function ge(e){return{msgId:200,condition:"$.c8y_SetCoil",pattern:["$.id","$.c8y_SetCoil.address","$.c8y_SetCoil.input","$.c8y_SetCoil.coil","$.c8y_SetCoil.value"]}}function ve(e){return{msgId:201,condition:"$.c8y_SetRegister",pattern:["$.id","$.c8y_SetRegister.ipAddress","$.c8y_SetRegister.address","$.c8y_SetRegister.input","$.c8y_SetRegister.register","$.c8y_SetRegister.startBit","$.c8y_SetRegister.noBits","$.c8y_SetRegister.value"]}}function ye(e){return{msgId:202,condition:"$.c8y_ModbusDevice",pattern:["$.id","$.deviceId","$.c8y_ModbusDevice.id","$.c8y_ModbusDevice.address","$.c8y_ModbusDevice.type","$.c8y_ModbusDevice.protocol"]}}function fe(e){return{msgId:203,condition:"$.c8y_ModbusSource",pattern:["$.id"]}}function be(e){this.kvObj=e}function he(e,t){var n;return e instanceof be?n=_e(e.kvObj):_.isArray(e)?n=_e(e):_.isObjectLike(e)&&(n=angular.toJson(e)),t=t||$t,n=n.replace(/"%n"/g,t)}function _e(e){var t=_.map(e,Te);return"{"+t.join(",")+"}"}function Te(e){var t,n={};return e.value instanceof be?(n[e.key]=":::INNER_OBJECT_STRING:::",t=angular.toJson(n).replace('":::INNER_OBJECT_STRING:::"',_e(e.value.kvObj)),t=t.substr(1,t.length-2)):e.raw?(n[e.key]=":::RAW_VALUE:::",t=angular.toJson(n).replace('":::RAW_VALUE:::"',e.value),t=t.substr(1,t.length-2)):(n[e.key]=e.value,t=angular.toJson(n),t=t.substr(1,t.length-2)),t}function De(e){return e=Ie(e),e=Se(e),e.fieldbusType=It(e),e}function Ie(e){return _.forEach(e.c8y_Coils,function(e){!e.enumValues&&e.statusMapping&&_.isArray(e.statusMapping.enumValues)&&(e.enumValues={0:e.statusMapping.enumValues[0],1:e.statusMapping.enumValues[1]},delete e.statusMapping.enumValues),_.isUndefined(e.input)&&(e.input=Ot.discreteOutput.input)}),e}function Se(e){return _.forEach(e.c8y_Registers,function(e){e.startBit=e.startBit||Ot.register.startBit,e.noBits=e.noBits||Ot.register.noBits,e.signed=e.signed||Ot.register.signed,!e.unit&&e.measurementMapping&&e.measurementMapping.unit&&(e.unit=e.measurementMapping.unit,delete e.measurementMapping.unit),_.isUndefined(e.input)&&(e.input=Ot.holdingRegister.input)}),e}function we(e){var t=_.get(e,"c8y_Coils",[]),n=_.get(e,"c8y_Registers",[]);return _.union(_.map(t,Me),_.map(n,He))}function Re(e){if(e)return e.c8y_Coils=_.map(e.c8y_Coils,Me),e}function Me(e){return e.meta=e.meta||{},e=Ee(e),e=xe(e),e=Ce(e),e=Ae(e),e=$e(e)}function Ee(e){return e.meta.type=e.meta.type||Vt.DISCRETE_IO,e}function xe(e){return e.meta.enumType=e.meta.enumType||!!e.enumValues,e.meta.enumValues=e.meta.enumValues||e.enumValues&&_.map(e.enumValues,Ve),e}function Ve(e,t){return{value:parseFloat(t),label:e}}function Ce(e){return e.meta.showStatus=e.meta.showStatus||!(!e.statusMapping||"read"!==e.statusMapping.status&&"write"!==e.statusMapping.status),e.meta.updateStatus=e.meta.updateStatus||!(!e.statusMapping||"write"!==e.statusMapping.status),e}function Ae(e){return e.meta.raiseAlarm=e.meta.raiseAlarm||!(!e.alarmMapping||_.isUndefined(e.alarmMapping.raiseAlarmTemplate)),e}function $e(e){return e.meta.sendEvent=e.meta.sendEvent||!(!e.eventMapping||_.isUndefined(e.eventMapping.eventTemplate)),e}function Oe(e){return e.meta&&(e=Ne(e),e=Be(e),e=ke(e),e=Ue(e),e=Pe(e),delete e.meta),e}function Ne(e){return e.meta.type=void 0,e}function Be(e){return e.meta.enumType?(e.enumValues={},_.forEach(e.meta.enumValues,function(t){e.enumValues[t.value]=t.label})):e.enumValues=void 0,e}function ke(e){return e.meta.showStatus||e.meta.updateStatus?(e.statusMapping=e.statusMapping||{},e.meta.showStatus&&(e.statusMapping.status="read"),e.meta.updateStatus&&(e.statusMapping.status="write")):e.statusMapping=void 0,e}function Ue(e){return e.meta.raiseAlarm?(e.alarmMapping=e.alarmMapping||{},e.alarmMapping.raiseAlarmTemplate=null):e.alarmMapping=void 0,e}function Pe(e){return e.meta.sendEvent?(e.eventMapping=e.eventMapping||{},e.eventMapping.eventTemplate=null):e.eventMapping=void 0,e}function Fe(e){if(e)return e.c8y_Registers=_.map(e.c8y_Registers,He),e}function He(e){return e.meta=e.meta||{},e=qe(e),e=Le(e),e=je(e),e=Ge(e),e=ze(e),e=We(e),e=Je(e)}function qe(e){return e.meta.type=e.meta.type||Vt.REGISTER,e}function Le(e){return e.meta.enumType=e.meta.enumType||!!e.enumValues,e.meta.enumValues=e.meta.enumValues||e.enumValues&&_.map(e.enumValues,Ve),e}function je(e){return e.meta.showStatus=e.meta.showStatus||!(!e.statusMapping||"read"!==e.statusMapping.status&&"write"!==e.statusMapping.status),e.meta.updateStatus=e.meta.updateStatus||!(!e.statusMapping||"write"!==e.statusMapping.status),e}function Ge(e){return e.meta.sendMeasurement=e.meta.sendMeasurement||!(!e.measurementMapping||_.isUndefined(e.measurementMapping.sendMeasurementTemplate)),e}function ze(e){return e.meta.raiseAlarm=e.meta.raiseAlarm||!(!e.alarmMapping||_.isUndefined(e.alarmMapping.raiseAlarmTemplate)),e}function We(e){return e.meta.sendEvent=e.meta.sendEvent||!(!e.eventMapping||_.isUndefined(e.eventMapping.eventTemplate)),e}function Je(e){return e.meta.valuesRange=e.meta.valuesRange||_t(e),e}function Qe(e){return e.meta&&(e=Xe(e),e=Ke(e),e=Ye(e),e=Ze(e),e=et(e),e=tt(e),e=nt(e),delete e.meta),e}function Xe(e){return e.meta.type=void 0,e}function Ke(e){return e.meta.enumType?(e.enumValues={},_.forEach(e.meta.enumValues,function(t){e.enumValues[t.value]=t.label})):e.enumValues=void 0,e}function Ye(e){return e.meta.showStatus||e.meta.updateStatus?(e.statusMapping=e.statusMapping||{},e.meta.showStatus&&(e.statusMapping.status="read"),e.meta.updateStatus&&(e.statusMapping.status="write")):e.statusMapping=void 0,e}function Ze(e){return e.meta.sendMeasurement?(e.measurementMapping=e.measurementMapping||{},e.measurementMapping.sendMeasurementTemplate=null):e.measurementMapping=void 0,e}function et(e){return e.meta.raiseAlarm?(e.alarmMapping=e.alarmMapping||{},e.alarmMapping.raiseAlarmTemplate=null):e.alarmMapping=void 0,e}function tt(e){return e.meta.sendEvent?(e.eventMapping=e.eventMapping||{},e.eventMapping.eventTemplate=null):e.eventMapping=void 0,e}function nt(e){return e.meta.valuesRange=void 0,e}function at(e){e.c8y_Registers=[],e.c8y_Coils=[]}function it(e){return _(e.c8y_Coils).reject("input").groupBy(ot).value()}function rt(e){return _(e.c8y_Coils).filter("input").groupBy(ot).value()}function st(e){return _(e.c8y_Registers).reject("input").groupBy(ot).value()}function lt(e){return _(e.c8y_Registers).filter("input").groupBy(ot).value()}function ot(e){return e.category||""}function ct(e,t){return s({templateUrl:"core_deviceDatabase4/views/discreteIOModal.html",controller:"discreteIOModalCtrl",title:ut(e),resolve:pt(e,t.c8y_Coils,t)})}function ut(e){return e.input?e.name?o.getString('Edit discrete input: "{{name}}"',e):l("New discrete input"):e.name?o.getString('Edit coil: "{{name}}"',e):l("New coil")}function dt(e,t){return s({templateUrl:"core_deviceDatabase4/views/registerModal.html",controller:"registerModalCtrl",title:mt(e,t),resolve:pt(e,t.c8y_Registers,t)})}function mt(e,t){if(e.input)return e.name?o.getString('Edit input register: "{{name}}"',e):l("New input register");var n="opcua"===It(t);return e.name?n?o.getString('Edit variable: "{{name}}"',e):o.getString('Edit holding register: "{{name}}"',e):l(n?"New variable":"New holding register")}function pt(e,t,n){var a={};return a.element=_.partial(_.cloneDeep,gt(e)),a.existingElements=_.partial(_.cloneDeep,t),a.existingCategories=_.partial(_.cloneDeep,vt(n)),a.deviceType=function(){return It(n)},a}function gt(e){if(e)return _.assign({},e,{meta:{original:_.cloneDeep(e)}})}function vt(e){var t=[].concat(e.c8y_Coils).concat(e.c8y_Registers);return _(t).filter("category").map("category").uniq().map(yt).value()}function yt(e){return{name:e}}function ft(e){e.meta.enumValues=e.meta.enumValues||[],e.meta.enumValues.push({value:null,label:null})}function bt(e,t){e.meta.enumValues=_.without(e.meta.enumValues,t)}function ht(e,t){var n=e.startBit+e.noBits-1,a=t.startBit+t.noBits-1;return Math.max(e.startBit,t.startBit)<=Math.min(n,a)}function _t(e){var t=e.decimalPlaces,n=Tt(e.multiplier*Math.pow(10,-e.decimalPlaces)/e.divisor),a=Tt((e.signed?-Math.pow(2,e.noBits-1):0)*n),i=Tt((e.signed?Math.pow(2,e.noBits-1)-1:Math.pow(2,e.noBits)-1)*n);return{base:{decimalPlaces:t,step:n,min:a,max:i},custom:{decimalPlaces:t,step:n,min:Math.max(a,e.min||a),max:Math.min(i,e.max||i)}}}function Tt(e){var t=Math.pow(10,10);return Math.round(e*t)/t}function Dt(e){return _.defaults(e,{}),s({templateUrl:"core_deviceDatabase4/views/fieldbusPropertySelector.html",controller:"FieldbusPropertySelectorCtrl as ctrl",
resolve:{modalParams:function(){return e}}})}function It(e){return e.fieldbusType||"modbus"}function St(e){return e.id+".json"}function wt(e){return!!_.find(_.at(e,["c8y_ModbusDevice","c8y_CanDevice","c8y_OPCUADevice","c8y_OPCUAGateway"]))}function Rt(e){var t=e.id||e;return w(t).then(Mt)}function Mt(e){return window.btoa(JSON.stringify(e,null,2))}var Et=n.has("FIELDBUS_UI_VERSION")?n.get("FIELDBUS_UI_VERSION"):4,xt=["c8y_ModbusDevice.type","c8y_CanBus.type","c8y_OPCUADevice.type"],Vt=a.createEnum(["DISCRETE_IO","REGISTER"]),Ct="c8y_ModbusDeviceType",At=a.dataFilePath("devicetypes"),$t="%%",Ot={common:{name:null,fieldbusType:null},deviceType:{type:Ct,c8y_Coils:[],c8y_Registers:[]},element:{number:null},discreteIO:{},discreteOutput:{input:!1},discreteInput:{input:!0},register:{multiplier:1,divisor:1,decimalPlaces:0,startBit:0,noBits:16,unit:"",signed:!1},canbusRegister:{noBits:64,offset:0},holdingRegister:{input:!1},inputRegister:{input:!0}},Nt={discreteIO:{enumValues:[{value:0,label:"0"},{value:1,label:"1"}]}};return{ElementType:Vt,getElementTypeLabel:c,Defaults:Ot,MetaDefaults:Nt,getEmptyDeviceType:d,getAvailableDeviceTypes:y,getDeviceTypeFromDevice:f,getDeviceType:b,save:A,exportDeviceTypeAndSaveAs:E,importDeviceTypeWithUI:h,getPredefinedDeviceTypeInfos:I,getPredefinedDeviceType:w,downloadPredefinedDeviceTypeAndSaveAs:R,upgradeDeviceType:De,getElementsWithMeta:we,addDiscreteIOsMeta:Re,addDiscreteIOMeta:Me,removeDiscreteIOMeta:Oe,addRegistersMeta:Fe,addRegisterMeta:He,removeRegisterMeta:Qe,removeAllElements:at,getElementRefId:U,findElementBestMatchingRefId:G,getDiscreteOutputsCategorized:it,getDiscreteInputsCategorized:rt,getHoldingRegistersCategorized:st,getInputRegistersCategorized:lt,getEmptyDiscreteOutput:m,getEmptyDiscreteInput:p,getEmptyHoldingRegister:g,getEmptyInputRegister:v,editDiscreteIOWithUI:ct,editRegisterWithUI:dt,addEmptyEnumValue:ft,removeEnumValue:bt,areOverlappingRegisters:ht,getValuesRange:_t,openFieldbusSelector:Dt,downloadPredefinedDeviceTypeHref:Rt,predefinedDeviceTypeHrefFilename:St,isFieldbusDevice:wt}}e.$inject=["$q","$http","$injector","c8yBase","c8yInventory","c8yIdentity","c8yModal","gettext","gettextCatalog"],angular.module("c8y.deviceDatabase4").factory("c8yDeviceDatabase",e)}(),function(){"use strict";function e(e,t,n,a,i,r,s,l,o,c){function u(e,n){var i=d(e,n),r=i.then(a.createConfirm).then(t.getResData),l=r.then(_.partial(a.addChildDevice,e)),o=l.then(function(){return r.then(_.partialRight(m,e.owner)).then(a.save)}),c=o.then(function(){return r.then(_.partial(p,e,n.deviceType)).then(s.create)});return c}function d(e,t){var a={name:t.name,type:t.deviceType.name,c8y_ModbusDevice:{address:t.address,ipAddress:t.ipAddress,type:"/inventory/managedObjects/"+t.deviceType.id,protocol:t.protocol}};return n.current().then(function(e){return a.owner=e.id,a})}function m(e,t){return e.owner=t,e}function p(e,t,n){return{deviceId:e.id,description:c.getString("Added new child device to {{name}} ({{id}})",e),c8y_ModbusDevice:{id:n.id,name:n.name,address:n.c8y_ModbusDevice.address,ipAddress:n.c8y_ModbusDevice.ipAddress,type:"/inventory/managedObjects/"+t.id,protocol:n.c8y_ModbusDevice.protocol}}}function g(e,t){var n=!r.isOpcua(e);return n&&!v(e)&&!(!t.statusMapping||"write"!==t.statusMapping.status)}function v(e){return e.c8y_ModbusReadOnlyDevice}function y(e){return e.changePending}function f(e,t){var n=R[t.meta.type.value];return e&&e[n]&&parseFloat(e[n][t.name])}function b(e,t){var n=f(e,t);return t.meta.enumType&&(n=t.meta.enumValues[n].label),n}function h(t,n,a){if(g(t,n)){var i=T(t,n,a);return n.changePending=!0,S(i).then(function(e){return e.status===s.status.SUCCESSFUL?(w(t,n,a),n.changePending=!1):e.status===s.status.FAILED&&(n.changePending=!1),e})}return e.reject()}function T(e,t,n){var a;return t.meta.type===i.ElementType.DISCRETE_IO?a=D(e,t,n):t.meta.type===i.ElementType.REGISTER&&(a=I(e,t,n)),a}function D(e,t,n){return{deviceId:e.id,description:c.getString("{{name}} status changed to {{label}}",{name:t.name,label:n.label}),c8y_SetCoil:{address:e.c8y_ModbusDevice.address,input:t.input,coil:t.number,value:n.value}}}function I(e,t,n){return{deviceId:e.id,description:c.getString("{{name}} value changed to {{value}}{{unit}}",{name:t.name,value:n.label||n.value,unit:!n.label&&t.unit?" "+t.unit:""}),c8y_SetRegister:{ipAddress:e.c8y_ModbusDevice.ipAddress,address:e.c8y_ModbusDevice.address,input:t.input,register:t.number,startBit:t.startBit,noBits:t.noBits,value:n.value}}}function S(e){return s.createWithNotifications(e).then(function(t){return t.created.then(function(){l.success(c.getString('Operation "{{description}}" has been created!',e))}),t.completed.then(function(t){return t.status===s.status.SUCCESSFUL?l.success(c.getString('Operation "{{description}}" has been completed successfully!',e)):t.status===s.status.FAILED&&(t.failureReason?l.danger(c.getString('Operation "{{description}}" has failed because of reason: "{{failureReason}}"!',t)):l.danger(c.getString('Operation "{{description}}" has failed!',t))),t})})}function w(e,t,n){t.meta.type===i.ElementType.DISCRETE_IO?(e.c8y_CoilStatus=e.c8y_CoilStatus||{},e.c8y_CoilStatus[t.name]=n.value):t.meta.type===i.ElementType.REGISTER&&(e.c8y_RegisterStatus=e.c8y_RegisterStatus||{},e.c8y_RegisterStatus[t.name]=n.value)}var R={};return R[i.ElementType.DISCRETE_IO.value]="c8y_CoilStatus",R[i.ElementType.REGISTER.value]="c8y_RegisterStatus",{create:u,canUpdateElement:g,isElementChangePending:y,getCurrentElementValue:f,getCurrentElementValueFormatted:b,updateElement:h}}e.$inject=["$q","c8yBase","c8yUser","c8yDevices","c8yDeviceDatabase","c8yOPCUADevice","c8yDeviceControl","c8yAlert","gettext","gettextCatalog"],angular.module("c8y.deviceDatabase4").factory("c8yModbusDevice",e)}(),function(){"use strict";function e(e,t,n,a,i){function r(t,i){var r=s(t,i),c=r.then(n.createConfirm).then(e.getResData),u=c.then(_.partial(n.addChildDevice,t)),d=u.then(function(){return c.then(_.partialRight(l,t.owner)).then(n.save)}),m=d.then(function(){return c.then(_.partial(o,t,i.deviceType)).then(a.create)});return m}function s(e,n){var a={name:e.name+" - "+n.deviceType.name,type:n.deviceType.name,c8y_CanDevice:{type:"/inventory/managedObjects/"+n.deviceType.id}};return t.current().then(function(e){return a.owner=e.id,a})}function l(e,t){return e.owner=t,e}function o(e,t,n){return{deviceId:e.id,description:i.getString("Added new child device to {{name}} ({{id}})",e),c8y_CanDevice:{id:n.id,name:n.name,type:"/inventory/managedObjects/"+t.id}}}return{create:r}}angular.module("c8y.deviceDatabase4").factory("c8yCanbusDevice",["c8yBase","c8yUser","c8yDevices","c8yDeviceControl","gettextCatalog",e])}(),function(){"use strict";function e(e,t,n,a,i){function r(t,i){var r=s(t,i),c=r.then(n.createConfirm).then(e.getResData),u=c.then(_.partial(n.addChildDevice,t)),d=u.then(function(){return c.then(_.partialRight(l,t.owner)).then(n.save)}),m=d.then(function(){return c.then(_.partial(o,t,i.deviceType)).then(a.create)});return m}function s(e,n){var a={name:n.name,type:n.deviceType.name,c8y_OPCUADevice:{browsePath:n.directoryPath,type:"/inventory/managedObjects/"+n.deviceType.id}};return t.current().then(function(e){return a.owner=e.id,a})}function l(e,t){return e.owner=t,e}function o(e,t,n){return{deviceId:e.id,description:i.getString("Added new child device to {{name}} ({{id}})",e),c8y_OPCUADevice:{id:n.id,name:n.name,browsePath:n.c8y_OPCUADevice.browsePath,type:"/inventory/managedObjects/"+t.id}}}function c(e){return!!(e||{})[u]}var u="c8y_OPCUADevice";return{create:r,isOpcua:c}}e.$inject=["c8yBase","c8yUser","c8yDevices","c8yDeviceControl","gettextCatalog"],angular.module("c8y.deviceDatabase4").factory("c8yOPCUADevice",e)}(),function(){"use strict";function e(e){function t(e){var t=[];return e&&e.c8y_CoilStatus&&(t.push(["c8y_CoilStatus"]),n(e.c8y_CoilStatus,["c8y_CoilStatus"],t)),e&&e.c8y_RegisterStatus&&(t.push(["c8y_RegisterStatus"]),n(e.c8y_RegisterStatus,["c8y_RegisterStatus"],t)),t}function n(e,t,a){return"Object"!==e.constructor.name?[]:void _.forEach(e,function(e,i){var r=t.concat([i]);a.push(r),n(e,r,a)})}function a(t){return{keyPath:t,label:e("humanize2")(_.last(t)),id:"c8yFieldbusProps!!"+t.join("!!"),fieldbus:!0}}return{generatePaths:t,createProperty:a}}angular.module("c8y.deviceDatabase4").factory("fieldbusPropertyGenerator",["$filter",e])}(),function(){"use strict";function e(){return{restrict:"A",require:"ngModel",link:function(e,t,n,a){function i(){var t,i={},r=n.uniquePropName,s=e.$eval(n.uniqueInArray);i[r]=a.$modelValue,t=!(s&&_.filter(s,i).length>1),a.$setValidity("unique",t)}e.$watch(n.uniqueInArray,i,!0),n.$observe(n.uniquePropName,i),e.$watch(function(){return a.$modelValue},i)}}}angular.module("c8y.deviceDatabase4").directive("unique",e)}(),function(){"use strict";function e(){function e(e,t,n,a){function i(t){var a=e.$eval(n.validateValueInRegisterRange);if(a){var i=Math.pow(10,a.decimalPlaces),r=(((t*i).toFixed(6)-(a.min*i).toFixed(6))/(a.step*i).toFixed(6)).toFixed(6);return r>=0&&r%1===0&&t<=a.max}}a.$validators["value-in-register-range"]=function(e){var t=!1;return _.isUndefined(e)||(t=i(e)),t},e.$watch(function(){return e.$eval(n.validateValueInRegisterRange)},function(){a.$validate()},!0)}return{restrict:"A",require:"ngModel",link:e}}angular.module("c8y.deviceDatabase4").directive("validateValueInRegisterRange",e)}(),function(){"use strict";function e(e){var t;t='<a title="{{match.label}}">\n  <span ng-bind-html="match.label | uibTypeaheadHighlight:query"></span>\n</a>\n',e.put("core_deviceDatabase4/views/categoryTypeahead.html",t),e.put("/apps/core/deviceDatabase4/views/categoryTypeahead.html",t),t='<div class="row">\n  <div class="form-group col-lg-4" ng-class="{\'has-error\': deviceTypeForm.deviceType.$dirty && deviceTypeForm.deviceType.$invalid}">\n    <label translate>Device type</label>\n    <select name="deviceType" class="form-control" ng-change="changeDeviceType()" ng-model="formValue.fieldbusType" ng-disabled="!isNew()">\n      <option value="modbus" translate>Modbus</option>\n      <option value="canbus" translate>CAN Bus</option>\n      <option value="opcua" translate>OPCUA</option>\n    </select>\n  </div>\n  <div class="form-group col-lg-4" ng-class="{\'has-error\': deviceTypeForm.name.$dirty && deviceTypeForm.name.$invalid}">\n    <label translate>Name</label>\n    <input name="name" type="text" class="form-control" ng-model="deviceType.name" ng-disabled="!isNew()" required ng-maxlength="650">\n  </div>\n</div>\n',e.put("core_deviceDatabase4/views/details/basic.html",t),e.put("/apps/core/deviceDatabase4/views/details/basic.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="sliders"></i> <translate>Discrete inputs</translate>\n    <button class="btn btn-link pull-right" ng-click="addDiscreteInput()">\n      <i c8y-icon="plus"></i> <translate>Add</translate>\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-show="isEmpty(discreteInputsCategorized)" translate>\n      No discrete inputs defined.\n    </div>\n    <table class="table table-hover elements-table" ng-hide="isEmpty(discreteInputsCategorized)">\n      <colgroup>\n          <col/>\n          <col class="buttons"/>\n      </colgroup>\n      <thead ng-repeat-start="(category, discreteInputs) in discreteInputsCategorized">\n        <tr>\n          <th colspan="2" class="category-header" ng-class="{\'text-muted\': !category}">\n            <span ng-if="category" ng-bind="category" title="{{category}}"></span>\n            <span ng-if="!category" ng-bind="\'Uncategorized\' | translate"></span>\n          </th>\n        </tr>\n      </thead>\n      <tbody ng-repeat-end>\n        <tr ng-repeat="discreteInput in discreteInputs | orderBy:\'number\'">\n          <td class="interact info" ng-click="editDiscreteInput(discreteInput)">\n            <span ng-bind="discreteInput.name"></span>\n            <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n              <strong><span translate>Number</span>:</strong>\n              <span ng-bind="discreteInput.number"></span>\n            </small>\n          </td>\n          <td class="text-right">\n            <button class="btn btn-danger btn-xs showOnHover" uib-tooltip="{{\'Remove\' | translate}}" ng-click="removeDiscreteInput(discreteInput)">\n              <i c8y-icon="times"></i>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/views/details/discreteInputs.html",t),e.put("/apps/core/deviceDatabase4/views/details/discreteInputs.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="sliders"></i> <translate>Coils (discrete outputs)</translate>\n    <button class="btn btn-link pull-right" ng-click="addDiscreteOutput()">\n      <i c8y-icon="plus"></i> <translate>Add</translate>\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-show="isEmpty(discreteOutputsCategorized)" translate>\n      No coils defined.\n    </div>\n    <table class="table table-hover elements-table" ng-hide="isEmpty(discreteOutputsCategorized)">\n      <colgroup>\n          <col/>\n          <col class="buttons"/>\n      </colgroup>\n      <thead ng-repeat-start="(category, discreteOutputs) in discreteOutputsCategorized">\n        <tr>\n          <th colspan="2" class="category-header" ng-class="{\'text-muted\': !category}">\n            <span ng-if="category" ng-bind="category" title="{{category}}"></span>\n            <span ng-if="!category" ng-bind="\'Uncategorized\' | translate"></span>\n          </th>\n        </tr>\n      </thead>\n      <tbody ng-repeat-end>\n        <tr ng-repeat="discreteOutput in discreteOutputs | orderBy:\'number\'">\n          <td class="interact info" ng-click="editDiscreteOutput(discreteOutput)">\n            <span ng-bind="discreteOutput.name"></span>\n            <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n              <strong><span translate>Number</span>:</strong>\n              <span ng-bind="discreteOutput.number"></span>\n            </small>\n          </td>\n          <td class="text-right">\n            <button class="btn btn-danger btn-xs showOnHover" uib-tooltip="{{\'Remove\' | translate}}" ng-click="removeDiscreteOutput(discreteOutput)">\n              <i c8y-icon="times"></i>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/views/details/discreteOutputs.html",t),e.put("/apps/core/deviceDatabase4/views/details/discreteOutputs.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="tasks"></i> \n    <translate ng-if="deviceType.fieldbusType !== \'opcua\'">Holding registers</translate>\n    <translate ng-if="deviceType.fieldbusType === \'opcua\'">Variables</translate>\n    <button class="btn btn-link pull-right" ng-click="addHoldingRegister()">\n      <i c8y-icon="plus"></i> <translate>Add</translate>\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-show="isEmpty(holdingRegistersCategorized)">\n      <translate ng-if="deviceType.fieldbusType !== \'opcua\'">No holding registers defined.</translate>\n      <translate ng-if="deviceType.fieldbusType === \'opcua\'">No variables defined.</translate>\n    </div>\n    <table class="table table-hover elements-table" ng-hide="isEmpty(holdingRegistersCategorized)">\n      <colgroup>\n          <col/>\n          <col class="buttons"/>\n      </colgroup>\n      <thead ng-repeat-start="(category, holdingRegisters) in holdingRegistersCategorized">\n        <tr>\n          <th colspan="2" class="category-header" ng-class="{\'text-muted\': !category}">\n            <span ng-if="category" ng-bind="category" title="{{category}}"></span>\n            <span ng-if="!category" ng-bind="\'Uncategorized\' | translate"></span>\n          </th>\n        </tr>\n      </thead>\n      <tbody ng-repeat-end>\n        <tr ng-repeat="holdingRegister in holdingRegisters | orderBy:[\'number\',\'startBit\']">\n          <td ng-if="deviceType.fieldbusType !== \'opcua\'" class="interact info" ng-click="editHoldingRegister(holdingRegister)">\n            <span ng-bind="holdingRegister.name"></span>\n            <small class="text-muted hidden-sm hidden-xs registerDescription">\n              <strong ng-if="deviceType.fieldbusType === \'modbus\'"><span translate>Number</span>:</strong>\n              <strong ng-if="deviceType.fieldbusType === \'canbus\'"><span translate>Message ID</span>:</strong>\n              <span ng-bind="holdingRegister.number"></span>\n            </small>\n            <small class="text-muted hidden-sm hidden-xs registerDescription">\n              <strong><span translate>Start bit</span>:</strong>\n              <span ng-bind="holdingRegister.startBit"></span>\n            </small>\n            <small class="text-muted hidden-sm hidden-xs registerDescription">\n              <strong><span translate>Number of bits</span>:</strong>\n              <span ng-bind="holdingRegister.noBits"></span>\n            </small>\n          </td>\n          <td ng-if="deviceType.fieldbusType === \'opcua\'" class="interact info" ng-click="editHoldingRegister(holdingRegister)">\n            <small class="text-muted hidden-sm hidden-xs registerDescription">\n              <strong><span translate>Browse path</span>:</strong>\n              <span ng-bind="holdingRegister.browsePath"></span>\n            </small>\n            <small class="text-muted hidden-sm hidden-xs registerDescription">\n              <strong><span translate>Node type</span>:</strong>\n              <span ng-bind="holdingRegister.nodeType"></span>\n            </small>\n            <small class="text-muted hidden-sm hidden-xs registerDescription">\n              <strong><span translate>Attribute type</span>:</strong>\n              <span ng-bind="holdingRegister.attributeType"></span>\n            </small>\n          </td>\n          <td class="text-right">\n            <button class="btn btn-danger btn-xs showOnHover" uib-tooltip="{{\'Remove\' | translate}}" ng-click="removeHoldingRegister(holdingRegister)">\n              <i c8y-icon="times"></i>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/views/details/holdingRegisters.html",t),e.put("/apps/core/deviceDatabase4/views/details/holdingRegisters.html",t),t='<div ng-controller="deviceTypeDetailsCtrl">\n  <form role="form" name="deviceTypeForm" class="panel-body device-type-form" novalidate ng-show="deviceType">\n    <div ng-include="\'core_deviceDatabase4/views/details/basic.html\'"></div>\n    <div class="row" ng-if="deviceType.fieldbusType === \'modbus\'">\n      <div class="col-lg-6" ng-include="\'core_deviceDatabase4/views/details/discreteOutputs.html\'"></div>\n      <div class="col-lg-6" ng-include="\'core_deviceDatabase4/views/details/discreteInputs.html\'"></div>\n    </div>\n    <div class="row" ng-if="deviceType.fieldbusType === \'modbus\'">\n      <div class="col-lg-6" ng-include="\'core_deviceDatabase4/views/details/holdingRegisters.html\'"></div>\n      <div class="col-lg-6" ng-include="\'core_deviceDatabase4/views/details/inputRegisters.html\'"></div>\n    </div>\n    <div class="row" ng-if="deviceType.fieldbusType === \'canbus\' || deviceType.fieldbusType === \'opcua\'">\n      <div class="col-lg-12" ng-include="\'core_deviceDatabase4/views/details/holdingRegisters.html\'"></div>\n    </div>\n    <div ng-include="\'core_deviceDatabase4/views/details/options.html\'"></div>\n\n    <button class="btn btn-primary" ng-click="save(deviceType)" ng-disabled="saveDisabled()" translate>\n      Save\n    </button>\n  </form>\n</div>\n',e.put("core_deviceDatabase4/views/details/index.html",t),e.put("/apps/core/deviceDatabase4/views/details/index.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="tasks"></i> <translate>Input registers</translate>\n    <button class="btn btn-link pull-right" ng-click="addInputRegister()">\n      <i c8y-icon="plus"></i> <translate>Add</translate>\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-show="isEmpty(inputRegistersCategorized)" translate>\n      No input registers defined.\n    </div>\n    <table class="table table-hover elements-table" ng-hide="isEmpty(inputRegistersCategorized)">\n      <colgroup>\n          <col/>\n          <col class="buttons"/>\n      </colgroup>\n      <thead ng-repeat-start="(category, inputRegisters) in inputRegistersCategorized">\n        <tr>\n          <th colspan="2" class="category-header" ng-class="{\'text-muted\': !category}">\n            <span ng-if="category" ng-bind="category" title="{{category}}"></span>\n            <span ng-if="!category" ng-bind="\'Uncategorized\' | translate"></span>\n          </th>\n        </tr>\n      </thead>\n      <tbody ng-repeat-end>\n        <tr ng-repeat="inputRegister in inputRegisters | orderBy:[\'number\',\'startBit\']">\n          <td class="interact info" ng-click="editInputRegister(inputRegister)">\n            <span ng-bind="inputRegister.name"></span>\n            <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n              <strong><span translate>Number</span>:</strong>\n              <span ng-bind="inputRegister.number"></span>\n            </small>\n            <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n              <strong><span translate>Start bit</span>:</strong>\n              <span ng-bind="inputRegister.startBit"></span>\n            </small>\n            <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n              <strong><span translate>Number of bits</span>:</strong>\n              <span ng-bind="inputRegister.noBits"></span>\n            </small>\n          </td>\n          <td class="text-right">\n            <button class="btn btn-danger btn-xs showOnHover" title="{{\'Remove\' | translate}}" ng-click="removeInputRegister(inputRegister)">\n              <i c8y-icon="times"></i>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/views/details/inputRegisters.html",t),e.put("/apps/core/deviceDatabase4/views/details/inputRegisters.html",t),t='<div class="panel panel-clean" ng-if="deviceType.fieldbusType === \'modbus\'">\n  <div class="panel-heading">\n    <i c8y-icon="list"></i> <translate>Options</translate>\n  </div>\n  <div class="panel-body">\n    <div class="row">\n      <div class="form-group col-lg-12">\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" id="useServerTime" name="useServerTime" ng-model="deviceType.c8y_useServerTime">\n            <translate>Use server time</translate>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/views/details/options.html",t),e.put("/apps/core/deviceDatabase4/views/details/options.html",t),t='<div class="modal-header">\n  <h3 translate>Import device type</h3>\n</div>\n<div class="modal-body">\n  <form class="deviceTypesSearchForm">\n    <div class="input-group">\n      <span class="input-group-btn" dropdown>\n        <button class="btn btn-default" disabled="disabled">\n          <i c8y-icon="search"></i>\n        </button>\n      </span>\n      <input type="search" class="form-control" placeholder="{{\'Search device type\' | translate}}&hellip;" ng-model="deviceTypesFilter.text"/>\n    </div>\n  </form>\n  <div class="command-templates-list list-group">\n    <label><span translate>Choose predefined device type</span>:</label>\n    <div ng-repeat="deviceTypeInfo in predefinedDeviceTypeInfos | filter:deviceTypesFilter.text" class="list-group-item interact" ng-class="{\'active\': isPredefinedDeviceTypeInfoSelected(deviceTypeInfo)}" ng-click="onPredefinedDeviceTypeInfoSelected(deviceTypeInfo)">\n      <!-- <button class="btn btn-primary btn-xs showOnHover pull-right"\n              uib-tooltip="{{\'Download\' | translate}}"\n              tooltip-append-to-body="true"\n              ng-click="downloadPredefinedDeviceType(deviceTypeInfo)">\n        <i c8y-icon="download"></i>\n      </button> -->\n      <a class="btn btn-primary btn-xs showOnHover pull-right" uib-tooltip="{{\'Download\' | translate}}" tooltip-append-to-body="true" download="{{downloadFileName(deviceTypeInfo)}}" ng-href="data:application/json;base64,{{downloadFileHref(deviceTypeInfo)}}">\n        <i c8y-icon="download"></i>\n      </a>\n      <span class="list-group-item-heading">\n        <span ng-bind="deviceTypeInfo.name"></span>\n        <small ng-show="deviceTypeInfo.category" class="text-muted" ng-bind="deviceTypeInfo.category"></small>\n      </span>\n      <span class="list-group-item-text">\n        <small class="text-muted" ng-bind="deviceTypeInfo.description"></small>\n      </span>\n    </div>\n  </div>\n  <div class="form-group">\n    <label><span translate>Or load it from file</span>:</label>\n    <div class="input-group" id="deviceTypeFileInput" ng-file-select="onCustomDeviceTypeFileSelected($files)">\n      <input type="text" readonly="readonly" required class="form-control" ng-model="selection.custom.file.name" placeholder="{{\'Choose file to upload\' | translate}}&hellip;">\n      <span class="input-group-btn">\n        <button class="btn btn-primary">\n          <span><i c8y-icon="upload"></i></span>\n        </button>\n      </span>\n    </div>\n  </div>\n  <form name="importForm">\n    <div class="form-group" ng-class="{\'has-error\': importForm.name.$dirty && importForm.name.$invalid}">\n      <label for="name"><span translate>And save with the following name</span>:</label>\n      <input id="name" name="name" type="text" class="form-control" ng-model="selection.newName.value" placeholder="{{\'New device type name\' | translate}}" ng-change="onNewNameEdited()" required>\n    </div>\n  </form>\n</div>\n<div class="modal-footer">\n  <button type="button" class="btn btn-primary" ng-click="import(selectedDeviceType)" ng-disabled="!((selection.predefined.deviceType || selection.custom.deviceType) && importForm.$valid)" translate>Import</button>\n  <button type="button" class="btn btn-default" ng-click="cancel()" translate>Cancel</button>\n</div>\n',e.put("core_deviceDatabase4/views/deviceTypeImport.html",t),e.put("/apps/core/deviceDatabase4/views/deviceTypeImport.html",t),t='<div class="modal-header" ng-show="title">\n  <h3 class="text-truncate" ng-bind="title | translate" title="{{title | translate}}"></h3>\n</div>\n<div class="modal-body">\n  <form role="form" name="forms.element" class="panel-body" novalidate ng-show="element">\n    <div class="row">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'name\')}" uib-tooltip="{{validationHints(forms.element.name)}}">\n        <label for="name" translate>\n          Name\n        </label>\n        <input type="text" class="form-control" id="name" name="name" ng-model="element.name" required c8y-autocomplete="off">\n      </div>\n      <div class="form-group col-lg-6 category-form-group" ng-class="{\'has-error\': invalid(\'category\')}" uib-tooltip="{{validationHints(forms.element.category)}}">\n        <label for="category" translate>\n          Display category\n        </label>\n        <input type="text" class="form-control" id="category" name="category" ng-model="element.category" c8y-autocomplete="off" uib-typeahead="category.name for category in categories | filter:{name:$viewValue}" typeahead-template-url="core_deviceDatabase4/views/categoryTypeahead.html">\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'number\')}" uib-tooltip="{{validationHints(forms.element.number)}}">\n        <label for="number" translate>\n          Number\n        </label>\n        <input type="number" class="form-control" id="number" name="number" ng-model="element.number" min="1" max="65536" step="1" required>\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-6">\n        <label translate>Functionalities</label>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.showStatus" ng-disabled="element.meta.updateStatus">\n            <translate>Show status (read-only access)</translate>\n          </label>\n        </div>\n        <div class="checkbox" ng-if="!element.input">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.updateStatus" ng-change="onUpdateStatusCheckboxClicked()">\n            <translate>Update status (read/write access)</translate>\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.raiseAlarm">\n            <translate>Raise alarm</translate>\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.sendEvent">\n            <translate>Send event</translate>\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class="row">\n      <div ng-show="element.meta.showStatus" ng-repeat="enumValue in element.meta.enumValues | limitTo:2">\n        <ng-form name="nestedEnumValueValueForm">\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': nestedEnumValueValueForm.$dirty && nestedEnumValueValueForm.$invalid}">\n            <label>\n              <span ng-show="enumValue.value === 0" translate>Text to show if value is zero</span>\n              <span ng-show="enumValue.value === 1" translate>Text to show if value is one</span>\n            </label>\n            <input type="text" class="form-control" ng-model="enumValue.label" ng-required="element.meta.showStatus">\n          </div>\n        </ng-form>\n      </div>\n    </div>\n    <div class="row" ng-show="element.meta.raiseAlarm">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmType\')}" uib-tooltip="{{validationHints(forms.element.alarmType)}}">\n        <label for="alarmType" translate>\n          Alarm type\n        </label>\n        <input type="text" class="form-control" id="alarmType" name="alarmType" ng-model="element.alarmMapping.type" ng-required="element.meta.raiseAlarm">\n      </div>\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmText\')}" uib-tooltip="{{validationHints(forms.element.alarmText)}}">\n        <label for="alarmText" translate>\n          Alarm text\n        </label>\n        <input type="text" class="form-control" id="alarmText" name="alarmText" ng-model="element.alarmMapping.text" ng-required="element.meta.raiseAlarm">\n      </div>\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmSeverity\')}" uib-tooltip="{{validationHints(forms.element.alarmSeverity)}}">\n        <label for="alarmSeverity" translate>\n          Alarm severity\n        </label>\n        <select class="form-control" id="alarmSeverity" name="alarmSeverity" ng-model="element.alarmMapping.severity" ng-options="(p | translate) for p in alarmSeverities" ng-required="element.meta.raiseAlarm"></select>\n      </div>\n    </div>\n    <div class="row" ng-show="element.meta.sendEvent">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'eventType\')}" uib-tooltip="{{validationHints(forms.element.eventType)}}">\n        <label for="eventType" translate>\n          Event type\n        </label>\n        <input type="text" class="form-control" id="eventType" name="eventType" ng-model="element.eventMapping.type" ng-required="element.meta.sendEvent">\n      </div>\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'eventText\')}" uib-tooltip="{{validationHints(forms.element.eventText)}}">\n        <label for="eventText" translate>\n          Event text\n        </label>\n        <input type="text" class="form-control" id="eventText" name="eventText" ng-model="element.eventMapping.text" ng-required="element.meta.sendEvent">\n      </div>\n    </div>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-disabled="forms.element.$invalid" ng-click="save()" translate>\n    OK\n  </button>\n  <button class="btn btn-default" ng-click="dismiss()" translate>\n    Close\n  </button>\n</div>\n',
e.put("core_deviceDatabase4/views/discreteIOModal.html",t),e.put("/apps/core/deviceDatabase4/views/discreteIOModal.html",t),t='<div class="modal-header">\n  <h3>{{\'Select properties\' | translate}}</h3>\n</div>\n<div class="modal-body">\n  <div class="form-group">\n    <input class="form-control" placeholder="{{\'Search property\' | translate}}" ng-model="ctrl.search.$"/>\n  </div>\n  <div class="row form-group" style="border-bottom: 1px solid #ddd; vertical-align: bottom">\n    <div class="col-lg-2">\n      <label>{{\'Show\' | translate}}</label>\n    </div>\n    <div class="col-lg-4">\n      <label>{{\'Label\' | translate}}</label>\n    </div>\n    <div class="col-lg-6">\n      <label>{{\'Property\' | translate}}</label>\n    </div>\n  </div>\n  <div class="form-group">\n    <div class="row property" ng-class="{\'bg-info\': ctrl.isParent(property)}" ng-repeat="property in ctrl.properties | orderBy:ctrl.orderByFn | filter:ctrl.search">\n      <div class="col-lg-2">\n        <input ng-if="!ctrl.isParent(property)" name="property" type="radio" ng-model="ctrl.selected" ng-value="property">\n      </div>\n      <div class="col-lg-4">\n        {{property.label}}\n      </div>\n      <div class="col-lg-6">\n        {{property.keyPath.join(\'.\')}}\n      </div>\n    </div>\n    <p ng-if="!ctrl.properties.length" class="bg-warning" style="padding: 20px" translate>\n      The selected device does not have coil status and register properties.\n    </p>\n  </div>\n</div>\n<div class="modal-footer">\n  <button type="button" ng-disabled="!ctrl.selected" class="btn btn-primary" ng-click="$close(ctrl.selected)">{{\'Select\' | translate}}</button>\n  <button type="button" class="btn btn-default" ng-click="$dismiss()">{{\'Cancel\' | translate}}</button>\n</div>\n',e.put("core_deviceDatabase4/views/fieldbusPropertySelector.html",t),e.put("/apps/core/deviceDatabase4/views/fieldbusPropertySelector.html",t),t='<div ng-controller="deviceTypesListCtrl">\n  <div class="clearfix">\n    <c8y-refresh-btn class="pull-right" style="margin-bottom:20px"></c8y-refresh-btn>\n    <button class="btn btn-link pull-right" ng-click="importDeviceType()">\n      <i c8y-icon="upload"></i> <translate>Import</translate>\n    </button>\n    <button class="btn btn-link pull-right" ng-click="addDeviceType()">\n      <i c8y-icon="plus"></i> <translate>New</translate>\n    </button>\n  </div>\n\n  <div class="alert alert-warning" ng-show="deviceTypes.length === 0" translate>\n    No device types found.\n  </div>\n\n  <table class="table table-hover" ng-show="deviceTypes.length > 0">\n    <tr ng-repeat="deviceType in deviceTypes | orderBy:\'name\'">\n      <td class="interact word-break" ng-click="navigateToDetails(deviceType)" ng-bind="deviceType.name"></td>\n      <td class="text-right word-nobreak">\n        <button class="btn btn-primary btn-xs showOnHover" uib-tooltip="{{\'Export\' | translate}}" ng-click="onClickExport(deviceType)">\n          <i c8y-icon="download"></i>\n        </button>\n        <button class="btn btn-danger btn-xs showOnHover" uib-tooltip="{{\'Remove\' | translate}}" ng-click="onClickDelete(deviceType)">\n          <i c8y-icon="times"></i>\n        </button>\n      </td>\n    </tr>\n  </table>\n\n  <c8y-load-more></c8y-load-more>\n</div>\n',e.put("core_deviceDatabase4/views/list.html",t),e.put("/apps/core/deviceDatabase4/views/list.html",t),t='<div class="modal-header" ng-show="title">\n  <h3 class="text-truncate" ng-bind="title | translate" title="{{title | translate}}"></h3>\n</div>\n<div class="modal-body">\n  <form role="form" name="form_element" class="panel-body" ng-show="element" novalidate>\n    <div class="row">\n      <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'name\')}" uib-tooltip="{{validationHints(form_element.name)}}">\n        <label for="name" translate>\n          Name\n        </label>\n        <input type="text" class="form-control" id="name" name="name" ng-model="element.name" required c8y-autocomplete="off">\n      </div>\n      <div class="form-group col-lg-6 category-form-group" ng-class="{\'has-error\': invalid(\'category\')}" uib-tooltip="{{validationHints(form_element.category)}}">\n        <label for="category" translate>\n          Display category\n        </label>\n        <input type="text" class="form-control" id="category" name="category" ng-model="element.category" c8y-autocomplete="off" uib-typeahead="category.name for category in categories | filter:{name:$viewValue}" typeahead-template-url="core_deviceDatabase4/views/categoryTypeahead.html">\n      </div>\n    </div>\n    <div class="row">\n      <div ng-if="deviceType === \'modbus\'" class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'number\')}" uib-tooltip="{{validationHints(form_element.number)}}">\n        <label for="number" translate>Number</label>\n        <input type="number" class="form-control" id="number" name="number" ng-model="element.number" min="1" max="65536" step="1" required>\n      </div>\n      <div ng-if="deviceType === \'canbus\'" class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'number\')}" uib-tooltip="{{validationHints(form_element.number)}}">\n        <label for="number" translate>Message ID</label>\n        <input type="text" class="form-control" id="number" name="number" ng-model="element.number" placeholder="{{\'Hexadecimal number\' | translate}}" required>\n      </div>\n      <div ng-if="deviceType === \'opcua\'" class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'browsePath\')}" uib-tooltip="{{validationHints(form_element.browsePath)}}">\n        <label for="number" translate>Browse path</label>\n        <input type="text" class="form-control" id="browsePath" name="browsePath" ng-model="element.browsePath" placeholder="{{\'e.g.: 4:Boilers/4:Boiler #1\' | translate}}" required>\n      </div>\n      <div ng-if="deviceType !== \'opcua\'" class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'startBit\')}" uib-tooltip="{{validationHints(form_element.startBit)}}">\n        <label for="startBit" translate>\n          Start bit\n        </label>\n        <input type="number" class="form-control" id="startBit" name="startBit" ng-model="element.startBit" min="0" max="{{deviceType === \'modbus\'? 15 : 63}}" step="1" required>\n      </div>\n      <div ng-if="deviceType !== \'opcua\'" class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'noBits\')}" uib-tooltip="{{validationHints(form_element.noBits)}}">\n        <label for="noBits" translate>\n          Number of bits\n        </label>\n        <input type="number" class="form-control" id="noBits" name="noBits" ng-model="element.noBits" min="1" max="{{noBitsMax(element.startBit)}}" step="1" required>\n      </div>\n      <div ng-if="deviceType === \'opcua\'" class="form-group col-lg-4" uib-tooltip="{{validationHints(form_element.nodeType)}}">\n        <label for="nodeTypeValue" translate>\n          Node type\n        </label>\n        <select class="form-control" id="nodeTypeValue" name="nodeTypeValue" ng-model="element.nodeType" ng-init="element.nodeType=\'Variable\'" disabled="disabled">\n          <option value="Variable">Variable</option>\n        </select>\n      </div>\n      <div ng-if="deviceType === \'opcua\'" class="form-group col-lg-4" uib-tooltip="{{validationHints(form_element.attributeType)}}">\n        <label for="attributeType" translate>\n          Attribute type\n        </label>\n        <input type="text" class="form-control" id="attributeType" name="attributeType" ng-model="element.attributeType" ng-init="element.attributeType=\'Value\'" disabled="disabled">\n      </div>\n      \n    </div>\n    <div class="row">\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'multiplier\')}" uib-tooltip="{{validationHints(form_element.multiplier)}}">\n        <label for="name" translate>\n          Multiplier\n        </label>\n        <input type="number" class="form-control" id="multiplier" name="multiplier" ng-model="element.multiplier" min="1" step="1" required>\n      </div>\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'divisor\')}" uib-tooltip="{{validationHints(form_element.divisor)}}">\n        <label for="number" translate>\n          Divisor\n        </label>\n        <input type="number" class="form-control" id="divisor" name="divisor" ng-model="element.divisor" min="1" step="1" required>\n      </div>\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'decimalPlaces\')}" uib-tooltip="{{validationHints(form_element.decimalPlaces)}}">\n        <label for="decimalPlaces" translate>\n          Decimal places\n        </label>\n        <input type="number" class="form-control" id="decimalPlaces" name="decimalPlaces" ng-model="element.decimalPlaces" min="0" max="5" step="1" required>\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'offset\')}" uib-tooltip="{{validationHints(form_element.offset)}}" ng-if="deviceType === \'canbus\'">\n        <label for="offset" translate>\n          Offset\n        </label>\n        <input type="number" class="form-control" id="offset" name="offset" ng-model="element.offset" min="{{minOffset}}" max="{{maxOffset}}" step="1" required>\n      </div>\n      <div class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'unit\')}" uib-tooltip="{{validationHints(form_element.unit)}}">\n        <label for="unit" translate>\n          Unit\n        </label>\n        <input type="text" class="form-control" id="unit" name="unit" ng-model="element.unit">\n      </div>\n      <div ng-if="element.meta.updateStatus" class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'min\')}" uib-tooltip="{{validationHints(form_element.min, {validateValueInRegisterRange: element.meta.valuesRange.base})}}">\n        <label for="min" translate>\n          Minimum\n        </label>\n        <input type="number" class="form-control" id="min" name="min" ng-model="element.min" min="{{element.meta.valuesRange.base.min}}" max="{{element.meta.valuesRange.custom.max}}" step="{{element.meta.valuesRange.base.step}}" validate-value-in-register-range="element.meta.valuesRange.base" placeholder="{{getValuePlaceholder(element.meta.valuesRange.base.min)}}" required>\n      </div>\n      <div ng-if="element.meta.updateStatus" class="form-group col-lg-4" ng-class="{\'has-error\': invalid(\'max\')}" uib-tooltip="{{validationHints(form_element.max, {validateValueInRegisterRange: element.meta.valuesRange.base})}}">\n        <label for="max" translate>\n          Maximum\n        </label>\n        <input type="number" class="form-control" id="max" name="max" ng-model="element.max" min="{{element.meta.valuesRange.custom.min}}" max="{{element.meta.valuesRange.base.max}}" step="{{element.meta.valuesRange.base.step}}" validate-value-in-register-range="element.meta.valuesRange.base" placeholder="{{getValuePlaceholder(element.meta.valuesRange.base.max)}}" required>\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-6">\n        <label translate>Options</label>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="element.signed">\n            <translate>Signed</translate>\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.enumType">\n            <translate>Enumeration type</translate>\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class="row" ng-show="element.meta.enumType">\n      <div class="form-group col-lg-12">\n        <label translate>Enumeration values</label>\n        <div ng-repeat="enumValue in element.meta.enumValues">\n          <div class="row">\n            <ng-form name="nestedEnumValueValueForm">\n              <div class="form-group col-lg-4" ng-class="{\'has-error\': nestedEnumValueValueForm.$dirty && nestedEnumValueValueForm.$invalid}" uib-tooltip="{{validationHints(nestedEnumValueValueForm, {validateValueInRegisterRange: element.meta.valuesRange.custom})}}">\n                <input type="number" class="form-control" ng-model="enumValue.value" min="{{element.meta.valuesRange.custom.min}}" max="{{element.meta.valuesRange.custom.max}}" step="{{element.meta.valuesRange.custom.step}}" validate-value-in-register-range="element.meta.valuesRange.custom" unique unique-in-array="element.meta.enumValues" unique-prop-name="value" placeholder="{{\'Value\' | translate}}" uib-tooltip="{{\'Value\' | translate}}" required/>\n              </div>\n            </ng-form>\n            <ng-form name="nestedEnumValueLabelForm">\n              <div class="form-group col-lg-4" ng-class="{\'has-error\': nestedEnumValueLabelForm.$dirty && nestedEnumValueLabelForm.$invalid}" uib-tooltip="{{validationHints(nestedEnumValueLabelForm)}}">\n                <input type="text" class="form-control" ng-model="enumValue.label" placeholder="{{\'Label\' | translate}}" uib-tooltip="{{\'Label\' | translate}}" required/>\n              </div>\n            </ng-form>\n            <a class="btn btn-link pull-right" ng-click="removeEnumValue(element, enumValue)">\n              <i c8y-icon="minus"></i> <translate>Remove value</translate>\n            </a>\n          </div>\n        </div>\n        <div class="row">\n          <a class="btn btn-link left" ng-click="addEnumValue(element)">\n            <i c8y-icon="plus"></i> <translate>Add value</translate>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class="row">\n      <div class="form-group col-lg-6">\n        <label translate>Functionalities</label>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.showStatus" ng-disabled="element.meta.updateStatus"> <translate>Show status (read-only access)</translate>\n          </label>\n        </div>\n        <div class="checkbox" ng-show="!element.input">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.updateStatus" ng-change="onUpdateStatusCheckboxClicked()"> <translate>Update status (read/write access)</translate>\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.sendMeasurement">\n            <translate>Send measurement</translate>\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.raiseAlarm">\n            <translate>Raise alarm</translate>\n          </label>\n        </div>\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" value="" ng-model="element.meta.sendEvent">\n            <translate>Send event</translate>\n          </label>\n        </div>\n      </div>\n    </div>\n    <div ng-show="element.meta.sendMeasurement">\n      <div class="row">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'measurementType\')}" uib-tooltip="{{validationHints(form_element.measurementType)}}">\n          <label for="measurementType" translate>\n            Measurement type\n          </label>\n          <input type="text" class="form-control" id="measurementType" name="measurementType" ng-model="element.measurementMapping.type" ng-required="element.meta.sendMeasurement">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'measurementSeries\')}" uib-tooltip="{{validationHints(form_element.measurementSeries)}}">\n          <label for="measurementSeries" translate>\n            Measurement series\n          </label>\n          <input type="text" class="form-control" id="measurementSeries" name="measurementSeries" ng-model="element.measurementMapping.series" ng-required="element.meta.sendMeasurement">\n        </div>\n      </div>\n    </div>\n    <div ng-show="element.meta.raiseAlarm">\n      <div class="row">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmType\')}" uib-tooltip="{{validationHints(form_element.alarmType)}}">\n          <label for="alarmType" translate>\n            Alarm type\n          </label>\n          <input type="text" class="form-control" id="alarmType" name="alarmType" ng-model="element.alarmMapping.type" ng-required="element.meta.raiseAlarm">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmText\')}" uib-tooltip="{{validationHints(form_element.alarmText)}}">\n          <label for="alarmText" translate>\n            Alarm text\n          </label>\n          <input type="text" class="form-control" id="alarmText" name="alarmText" ng-model="element.alarmMapping.text" ng-required="element.meta.raiseAlarm">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'alarmSeverity\')}" uib-tooltip="{{validationHints(form_element.alarmSeverity)}}">\n          <label for="alarmSeverity" translate>\n            Alarm severity\n          </label>\n          <select class="form-control" id="alarmSeverity" name="alarmSeverity" ng-model="element.alarmMapping.severity" ng-options="(p | translate) for p in alarmSeverities" ng-required="element.meta.raiseAlarm"></select>\n        </div>\n      </div>\n    </div>\n    <div ng-show="element.meta.sendEvent">\n      <div class="row">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'eventType\')}" uib-tooltip="{{validationHints(form_element.eventType)}}">\n          <label for="eventType" translate>\n            Event type\n          </label>\n          <input type="text" class="form-control" id="eventType" name="eventType" ng-model="element.eventMapping.type" ng-required="element.meta.sendEvent">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': invalid(\'eventText\')}" uib-tooltip="{{validationHints(form_element.eventText)}}">\n          <label for="eventText" translate>\n            Event text\n          </label>\n          <input type="text" class="form-control" id="eventText" name="eventText" ng-model="element.eventMapping.text" ng-required="element.meta.sendEvent">\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-disabled="form_element.$invalid" ng-click="save()" translate>\n    OK\n  </button>\n  <button class="btn btn-default" ng-click="dismiss()" translate>\n    Close\n  </button>\n</div>\n',e.put("core_deviceDatabase4/views/registerModal.html",t),e.put("/apps/core/deviceDatabase4/views/registerModal.html",t)}angular.module("c8y.deviceDatabase4").run(["$templateCache",e])}();