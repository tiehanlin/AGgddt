/* core_modbusWidgets 8.7.2 2017-08-02T09:54:45+00:00 e22b35b1d531 (hotfix/8.7.2) tip */
!function(){"use strict";function e(e,n){var t="core_modbusWidgets/views/";e.add({name:"Modbus Device Widget",nameDisplay:n("Fieldbus device widget"),description:n("Allows for seeing status and operating modbus device"),templateUrl:t+"widget.html",configTemplateUrl:t+"widgetConfig.html"})}angular.module("c8y.modbusWidgets",[]).config(["c8yComponentsProvider","gettext",e])}(),function(){"use strict";function e(e,n,t,i,s,l,a,u,c,d,o,r,g){function m(e){return T+"/"+e.id}function p(){var e=v();e.then(b),e.then(l.getDeviceTypeFromDevice).then(h).then(y).then(S).then(C).then(D).then(E)}function v(){return s.detail(e.child.config.device.id).then(i.getResData)}function b(n){e.device=B=n,B&&B.id&&(d.addListener(e.$id,m(B),d.realtimeActions().UPDATE,f),d.getStatus(e.$id,m(B))||d.switchRealtime(e.$id,m(B)))}function f(e,n){B.id===n.id&&(B.c8y_CoilStatus=_.assign(B.c8y_CoilStatus||{},n.c8y_CoilStatus),B.c8y_RegisterStatus=_.assign(B.c8y_RegisterStatus||{},n.c8y_RegisterStatus),S(),D())}function h(t){return t?(e.deviceType=k=t,t):n.reject()}function y(){e.coils=M=_(k.c8y_Coils).filter(w).map(l.addDiscreteIOMeta||l.addCoilMeta).value()}function w(n){return o.isDiscreteIOSelectedInConfig(n,e.child.config)}function C(){e.registers=N=_(k.c8y_Registers).filter(I).map(l.addRegisterMeta).value()}function I(n){return o.isRegisterSelectedInConfig(n,e.child.config)}function E(){var n=[].concat(M).concat(N);e.categories=_.groupBy(n,O)}function O(e){return e.category||""}function R(e,n,t){a.updateElement(e,n,t)}function S(){_.forEach(M,function(e){V(e)||(e.valueObj=_.find(e.meta.enumValues,{value:a.getCurrentElementValue(B,e)}))})}function D(){_.forEach(N,function(e){V(e)||(e.meta.enumType?e.valueObj=_.find(e.meta.enumValues,{value:a.getCurrentElementValue(B,e)}):(e.valueObj=e.valueObj||{},e.valueObj.value=a.getCurrentElementValue(B,e)))})}function V(e){return a.isElementChangePending(e)||_.includes(H,e)}function $(){B&&B.id&&d.destroySubscription(e.$id,m(B))}function x(e){return e.meta.enumType&&e.meta.enumValues&&2===e.meta.enumValues.length}function U(e){return e.meta.enumType&&e.meta.enumValues&&(1===e.meta.enumValues.length||e.meta.enumValues.length>2)}function j(e){return!e.meta.enumType}function W(e,n){return a.canUpdateElement(B,n)?i.validationHints(e,{required:r("This field is required!"),"value-in-register-range":g.getString(q,n&&n.meta&&n.meta.valuesRange.custom)}):""}function P(e){H.push(e)}function F(e){H=_.without(H,e),A(500)}function A(e){t(S,e),t(D,e)}var B,k,M,N,T="/managedobjects",q=r("Value out of range! Allowed values from {{min | number}} to {{max | number}} with step {{step | number}}. Use up/down arrows to find nearest possible value."),H=[];e.canUpdateElement=a.canUpdateElement,e.isElementChangePending=a.isElementChangePending,e.getCurrentElementValue=a.getCurrentElementValue,e.updateElement=R,e.shouldShowSwitch=x,e.shouldShowEnumSelect=U,e.shouldShowNumberInput=j,e.validationHints=W,e.focus=P,e.blur=F,e.$watch("child.config",p),e.$on("$destroy",$)}angular.module("c8y.modbusWidgets").controller("modbusWidgetCtrl",["$scope","$q","$timeout","c8yBase","c8yDevices","c8yDeviceDatabase","c8yModbusDevice","c8yDeviceControl","c8yAlert","c8yRealtime","modbusWidgetSvc","gettext","gettextCatalog",e])}(),function(){"use strict";function e(e,n,t,i,s,l,a){function u(e){e&&c(e).then(d)}function c(e){var n=e.id||e;return l.isFieldbusDevice(e)?t.when(e):s.detail(n).then(i.getResData)}function d(n){l.getDeviceTypeFromDevice(n).then(function(t){n.c8y_ModbusDevice&&o(t),g(t),e.showOnlyHoldingRegisters=!n.c8y_ModbusDevice,e.isOPCUADevice=n.c8y_OPCUADevice||n.c8y_OPCUAGateway,f()})}function o(n){e.discreteIOs=[],e.discreteInputs=[],e.discreteOutputs=[],n&&n.c8y_Coils&&_.forEach(n.c8y_Coils,function(n){n.statusMapping&&n.statusMapping.status&&(_.assign(n,{selected:r(n)}),e.discreteIOs.push(n),n.input?e.discreteInputs.push(n):e.discreteOutputs.push(n))})}function r(n){return a.isDiscreteIOSelectedInConfig(n,e.config)}function g(n){e.registers=[],e.inputRegisters=[],e.holdingRegisters=[],n&&n.c8y_Registers&&_.forEach(n.c8y_Registers,function(n){n.statusMapping&&n.statusMapping.status&&(_.assign(n,{selected:m(n)}),e.registers.push(n),n.input?e.inputRegisters.push(n):e.holdingRegisters.push(n))})}function m(n){return a.isRegisterSelectedInConfig(n,e.config)}function p(){v(),b(),f()}function v(){e.config.coils=_(e.discreteIOs).filter({selected:!0}).map(function(e){return e.id||[e.input,e.number].join(",")}).value()}function b(){e.config.registers=_(e.registers).filter({selected:!0}).map(function(e){return e.id||[e.input,e.number,e.startBit].join(",")}).value()}function f(){var n=e.config.coils&&e.config.registers&&e.config.coils.length+e.config.registers.length>0;e.forms.componentForm.fieldsControl.$setValidity("fields_selected",n)}var h=n.deviceId;e.deviceId=h,e.updateFields=p,e.$watch("config.device",u)}angular.module("c8y.modbusWidgets").controller("modbusWidgetConfigCtrl",["$scope","$routeParams","$q","c8yBase","c8yDevices","c8yDeviceDatabase","modbusWidgetSvc",e])}(),function(){"use strict";function e(e,n,t,i,s,l){function a(e,n){var t=_.includes(n.coils,e.id);return t||(t=_.includes(n.coils,[e.input,e.number].join(","))),t||(t=_.includes(n.coils,e.number)),t}function u(e,n){var t=_.includes(n.registers,e.id);return t||(t=_.includes(n.registers,[e.input,e.number,e.startBit].join(","))),t||(t=_.includes(n.registers,e.number)),t||(t=!!_.find(n.registers,function(n){return n.number===e.number&&n.startBit===e.startBit})),t}return{isDiscreteIOSelectedInConfig:a,isRegisterSelectedInConfig:u}}angular.module("c8y.modbusWidgets").factory("modbusWidgetSvc",["$q","c8yBase","c8yDevices","c8yDeviceDatabase","c8yDeviceControl","c8yAlert",e])}(),function(){"use strict";function e(e){var n;n='<div ng-controller="modbusWidgetCtrl" class="modbusWidget" ng-init="wgtId = \'wgt\' + $id">\n  <div ng-repeat="(category, elements) in categories" ng-init="catId = \'c\' + $index;" class="panel panel-default">\n    <div ng-show="category" class="panel-heading">\n      {{category}}\n    </div>\n    <div class="panel-body" style="overflow-x:hidden">\n      <div ng-repeat="element in elements" ng-init="elmId = \'e\' + $index">\n        <div class="modbus-category">\n          <i c8y-icon="spinner" class="fa-spin" ng-style="{visibility: isElementChangePending(element) ? \'initial\' : \'hidden\'}"></i>\n          <label for="{{wgtId+\'_\'+catId+\'_\'+elmId}}" ng-class="{\'notEditable\': !canUpdateElement(device, element)}" title="{{element.name}}">\n            {{element.name}}\n          </label>\n\n          <div class="control-container" ng-if="shouldShowSwitch(element)">\n            <button type="button" class="btn btn-default" style="z-index: 2" ng-disabled="!canUpdateElement(device, element) || isElementChangePending(element)" uib-btn-checkbox btn-checkbox-true="element.meta.enumValues[1]" btn-checkbox-false="element.meta.enumValues[0]" ng-model="element.valueObj" ng-change="updateElement(device, element, element.valueObj)" title="{{element.valueObj.label}}">\n              <span ng-bind="element.valueObj.label"></span>\n            </button>\n          </div>\n          <form class="control-container" name="elementValueForm" ng-if="shouldShowEnumSelect(element) || shouldShowNumberInput(element)" ng-submit="updateElement(device, element, element.valueObj)" novalidate>\n            <select ng-if="shouldShowEnumSelect(element)" id="{{wgtId+\'_\'+catId+\'_\'+elmId}}" class="form-control" ng-model="element.valueObj" ng-change="updateElement(device, element, element.valueObj)" ng-options="enumValue as enumValue.label for enumValue in element.meta.enumValues" ng-required="shouldShowEnumSelect(element)" ng-disabled="isElementChangePending(element) || !canUpdateElement(device, element)" ng-focus="focus(element)" ng-blur="blur(element)">\n            </select>\n            <div class="input-group" ng-if="shouldShowNumberInput(element)" ng-class="{\'has-error\': elementValueForm.numberInput.$dirty && elementValueForm.numberInput.$invalid}" uib-tooltip="{{validationHints(elementValueForm.numberInput, element)}}" tooltip-append-to-body="true">\n              <input id="{{wgtId+\'_\'+catId+\'_\'+elmId}}" name="numberInput" class="form-control text-right" ng-class="{\'input-border\': canUpdateElement(device, element)}" type="number" validate-value-in-register-range="element.meta.valuesRange.custom" ng-required="canUpdateElement(device, element) && shouldShowNumberInput(element)" ng-disabled="!canUpdateElement(device, element) || isElementChangePending(element)" ng-model="element.valueObj.value" min="{{element.meta.valuesRange.custom.min}}" max="{{element.meta.valuesRange.custom.max}}" step="{{element.meta.valuesRange.custom.step}}" ng-focus="focus(element)" ng-blur="blur(element)">\n              <span class="input-group-addon" ng-show="element.unit && shouldShowNumberInput(element)" title="{{element.unit}}" ng-bind="element.unit"></span>\n              <span class="input-group-btn" ng-if="canUpdateElement(device, element)">\n                <button class="btn btn-primary" ng-disabled="isElementChangePending(element) || !canUpdateElement(device, element) || elementValueForm.$invalid" translate>Set</button>\n              </span>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',e.put("core_modbusWidgets/views/widget.html",n),e.put("/apps/core/modbusWidgets/views/widget.html",n),n='<div ng-controller="modbusWidgetConfigCtrl">\n  <div class="row" ng-if="!showOnlyHoldingRegisters">\n    <div class="col-lg-6">\n      <div class="form-group" ng-show="discreteOutputs.length >= 0">\n        <label translate>Coils (discrete outputs)</label>\n        <div class="alert alert-warning" ng-show="discreteOutputs.length === 0" translate>\n           No coils available.\n        </div>\n        <div class="checkbox" ng-repeat="discreteOutput in discreteOutputs | orderBy:\'name\'">\n          <label>\n            <input type="checkbox" value="" ng-model="discreteOutput.selected" ng-change="updateFields()">\n            <span ng-bind="discreteOutput.name"></span>\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <div class="col-lg-6">\n      <div class="form-group" ng-show="discreteInputs.length >= 0">\n        <label translate>Discrete inputs</label>\n        <div class="alert alert-warning" ng-show="discreteInputs.length === 0" translate>\n           No discrete inputs available.\n        </div>\n        <div class="checkbox" ng-repeat="discreteInput in discreteInputs | orderBy:\'name\'">\n          <label>\n            <input type="checkbox" value="" ng-model="discreteInput.selected" ng-change="updateFields()">\n            <span ng-bind="discreteInput.name"></span>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="row">\n    <div class="col-lg-6">\n      <div class="form-group" ng-show="holdingRegisters.length >= 0">\n        <label ng-if="!isOPCUADevice" translate>Holding registers</label>\n        <label ng-if="isOPCUADevice" translate>Variables</label>\n        <div class="alert alert-warning" ng-show="holdingRegisters.length === 0">\n          <span ng-if="!isOPCUADevice" translate>No holding registers available.</span>\n          <span ng-if="isOPCUADevice" translate>No variables available.</span>\n        </div>\n        <div class="checkbox" ng-repeat="holdingRegister in holdingRegisters | orderBy:\'name\'">\n          <label>\n            <input type="checkbox" value="" ng-model="holdingRegister.selected" ng-change="updateFields()">\n            <span ng-bind="holdingRegister.name"></span>\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <div class="col-lg-6" ng-if="!showOnlyHoldingRegisters">\n      <div class="form-group" ng-show="inputRegisters.length >= 0">\n        <label translate>Input registers</label>\n        <div class="alert alert-warning" ng-show="inputRegisters.length === 0" translate>\n           No input registers available.\n        </div>\n        <div class="checkbox" ng-repeat="inputRegister in inputRegisters | orderBy:\'name\'">\n          <label>\n            <input type="checkbox" value="" ng-model="inputRegister.selected" ng-change="updateFields()">\n            <span ng-bind="inputRegister.name"></span>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <input type="hidden" name="fieldsControl" ng-model="fieldsControl"/>\n</div>\n',e.put("core_modbusWidgets/views/widgetConfig.html",n),e.put("/apps/core/modbusWidgets/views/widgetConfig.html",n)}angular.module("c8y.modbusWidgets").run(["$templateCache",e])}();