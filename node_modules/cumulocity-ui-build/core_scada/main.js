/* core_scada 8.7.2 2017-08-02T09:55:27+00:00 e22b35b1d531 (hotfix/8.7.2) tip */
!function(){"use strict";function e(e,n){e.add({name:"SCADA",description:n("Display a configurable SVG."),templateUrl:"core_scada/views/component.html",configTemplateUrl:"core_scada/views/componentConfig.html",transformConfigWithContext:function(e,n){return e.deviceIds&&(e.deviceIds=_.mapValues(e.deviceIds,function(){return n.id})),e},options:{groupsSelectable:!0}})}angular.module("c8y.parts.scadaWidget",[]).config(["c8yComponentsProvider","gettext",e])}(),function(){function e(e,n,i,t){function a(n,a,c,r){function d(){if(l=r.$viewValue,!l)return void r.$setValidity("c8y-scada-svg",!1);s=n.$new(!0),_.forEach(n.mapping,function(e,n){Object.defineProperty(s,n,{enumerable:!0,get:_.partial(o,n)})}),s.isReady=function(){return!0};var t=angular.element('<div ng-if="isReady()" style="width:100%;height:100%;transform: translateZ(0);"></div>'),c=$.parseHTML(l);$(c).is("svg")?(t.append($(c).filter("svg")),r.$setValidity("c8y-scada-svg",!0)):(t.html('<div class="alert-warning" translate style="padding: 20px;">'+i("Invalid SVG")+"</div>"),r.$setValidity("c8y-scada-svg",!1)),e(t)(s),a.html(""),a.append(t)}function o(e){var i=n.mapping[e],a=_.find(n.devices,function(i){return n.deviceIds[e]===i.id});return t.getValueForMapping(a,i)}var s,l;r.$render=d,n.$watch("mapping",d),n.$watch("deviceIds",d,!0)}return{require:"ngModel",restrict:"EA",link:a,scope:{mapping:"=",devices:"=",deviceIds:"="},replace:!1}}angular.module("c8y.parts.scadaWidget").directive("c8yScadaSvg",["$compile","$timeout","gettext","ScadaWidgetUtilSvc",e])}(),function(){"use strict";function e(e,n,i,t){function a(a,c,r,d){function o(n){return e.openSelector({selectSingle:!0,managedObject:g(a.deviceIds[n])})}function s(){d.$setViewValue(_.cloneDeep(a.mapping)),l()}function l(){var e=!1;_.forEach(a.mapping,function(n,i){a.hasError[i]=null===n,e=e||null===n}),d.$setValidity("c8y-scada-mapping",!e)}function u(e){var n=a.deviceIds,i=a.devices,t=n[e];t&&_.find(i,{id:t})||(n[e]=(_.head(i)||{}).id)}function g(e){return _.find(a.devices,function(n){return e===n.id})}a.hasError={},d.$render=function(){_.isEmpty(d.$modelValue)||(a.mapping=d.$modelValue,l())},a.clearMapping=function(e){a.mapping[e]=null,s()},a.setMapping=function(e){o(e).then(function(n){a.mapping[e]=n,s()})},a.editComputedProperty=function(e){n.edit(e).then(function(n){e.config=n,s()})},a.setFieldbusMapping=function(e){t.openFieldbusSelector({device:g(a.deviceIds[e])}).then(function(n){a.mapping[e]=n,s()})},a.humanizeValue=_.bind(i.humanizeMapping,i),a.propertyValueFor=function(e,n){var t=g(a.deviceIds[n]),c=i.getValueForMapping(t,e);return c},a.$watch("devices",function(e){e&&_.forEach(a.mapping,function(e,n){u(n)})},!0)}return{require:"ngModel",restrict:"EA",link:a,templateUrl:"core_scada/views/mapping.html",scope:{device:"=",devices:"=",deviceIds:"=",onDeviceIdsChange:"&"}}}angular.module("c8y.parts.scadaWidget").directive("c8yScadaMapping",["SchemaPropertiesSvc","c8yComputedProperties","ScadaWidgetUtilSvc","c8yDeviceDatabase",e])}(),function(){"use strict";function e(e,n,i,t,a,c,r,d,o){function s(e){I.svgFile={name:e.name};var n;return n=e instanceof Blob?a.readDataUri(e):a.downloadAsDataUri(e),n.then(a.decodeDataUri).then(l)}function l(e){return I.svgFile.data=e,p(),e}function u(n){_.forOwn(e.config.mapping,function(i,t){(1===I.devices.length||n)&&(e.config.deviceIds[t]=e.config.device.id),e.config.deviceIds[t]=e.config.deviceIds[t]||e.config.device.id})}function g(e){return _.find(I.devices,function(n){return e===n.id})}function p(){if(I.svgFile){var n=e.config.mapping||{},i=e.config.deviceIds||{},t=e.config.device&&e.config.device.id;e.config.mapping={},e.config.deviceIds={},_.forEach(v(I.svgFile.data),function(a){e.config.mapping[a]=n[a]?n[a]:null,e.config.deviceIds[a]=i[a]?i[a]:t||null}),f(e.config.deviceIds,e.config.mapping)}}function f(e,n){e&&n&&_.forOwn(e,function(e,i){var t=g(e),a=d.generatePaths(t);o.list().then(function(e){e=_.sortBy(e,function(e){return e.keyPath.length}).reverse(),null===n[i]&&(_.forEach(e,function(e){_.last(e.keyPath).toUpperCase()===i.toUpperCase()&&(n[i]=e)}),_.forEach(a,function(e){_.last(e).toUpperCase()===i.toUpperCase()&&(n[i]=d.createProperty(e))}))})})}function v(e){for(var n=[],i=/{{\s*([$\w]+?)\s*}}/g,t=i.exec(e);null!==t;)n.push(t[1]),t=i.exec(e);return n}function h(){return e.config.binaryId?(I.loading=!0,a.detail(e.config.binaryId).then(function(e){I.binaryFile=e.data,s(I.binaryFile),I.loading=!1})):n.when()}function m(e,n){I.device&&I.device.id!==n.id||_.assign(I.device,n)}function y(){var n=b(e.config.deviceIds);n!==C&&(C.length&&c.stop(e.$id,"/managedobjects/"+C),n.length&&(c.addListener(e.$id,"/managedobjects/"+n,"UPDATE",m),c.start(e.$id,"/managedobjects/"+n),e.$on("$destroy",_.partial(c.stop,e.$id,"/managedobjects/"+n))),C=n)}function b(e){return _(e).values().uniq().value().sort(function(e,n){return e-n}).join(",")}function w(){I.binaryFile={},e.config.mapping=e.config.mapping||{},e.config.deviceIds=e.config.deviceIds||{},e.config.devices&&delete e.config.devices,h(),y()}var I=this,C="",$={c8y_Global:{}};this.deviceDetail=function(a,c){var r=!_.isEqual(a,c);a&&t.detail(a.id).then(function(a){I.device=a.data;var c=_.union([I.device.id],_.map(_.union(I.device.childAssets.references,I.device.childDevices.references),function(e){return e.managedObject.id}));_.remove(c,_.isUndefined),n.all(_.map(c,function(e){return t.detail(e)})).then(function(n){I.devices=_.map(n,function(e){var n=e.data;return _.assign({},n,{name:i("truncate")(n.name)})}),u(r),I.updateComputedProperties(e.config.deviceIds,e.config.mapping)})})},this.onSelectFile=function(n){var i=n.target.files[0];I.loading=!0,a.upload(i,$).then(function(n){I.binaryFile=n.data,e.config.binaryId=n.data.id,s(i)}).finally(function(){I.loading=!1})},this.updateComputedProperties=function(e,n){_.isEmpty(e)||_.isEmpty(n)||_.forOwn(e,function(e,i){var t=[n[i]];if(n[i]){var a=g(e);r.attach(a,_.filter(t,function(e){return _.isObjectLike(e)}))}})},this.onMappingChange=function(){I.updateComputedProperties(e.config.deviceIds,e.config.mapping)},this.onDeviceIdsChange=function(){I.updateComputedProperties(e.config.deviceIds,e.config.mapping),y()},w(),e.$watch("config.device",this.deviceDetail,!0),e.$watch("config.mapping",this.onMappingChange,!0)}e.$inject=["$scope","$q","$filter","c8yDevices","c8yBinary","c8yRealtime","c8yComputedProperties","fieldbusPropertyGenerator","c8yPropertiesLibrary"],angular.module("c8y.parts.scadaWidget").controller("ScadaWidgetConfigCtrl",e)}(),function(){"use strict";function e(e,n,i,t,a,c){function r(e){return _.find(d.devices,function(n){return e===n.id})}var d=this;this.init=function(){e.child.config.deviceIds||(e.child.config.deviceIds={},_.forOwn(e.child.config.mapping,function(n,i){e.child.config.deviceIds[i]=e.child.config.device.id}));var c=_(e.child.config.deviceIds).values().uniq().map(function(n){return a.detailRealtime(n,e,function(e){e.name=i("truncate")(e.name)})}).value();n.all(c).then(function(n){d.devices=n,d.updateComputedProperties(e.child.config.deviceIds,e.child.config.mapping)}),t.detail(e.child.config.binaryId).then(function(e){d.svgFile=e.data,t.downloadAsDataUri(d.svgFile).then(t.decodeDataUri).then(function(e){d.svgFile.data=e})})},this.updateComputedProperties=function(e,n){e&&n&&_.forOwn(e,function(e,i){var t=[n[i]];t.length&&c.attach(r(e),t)})},this.init(),e.$watch("child.config",this.init,!0)}e.$inject=["$scope","$q","$filter","c8yBinary","c8yDevices","c8yComputedProperties"],angular.module("c8y.parts.scadaWidget").controller("ScadaWidgetCtrl",e)}(),function(){"use strict";function e(e,a){var c=[new t(e,a),new n,new i];this.humanizeMapping=function(e){return null==e?"":this.getHandler(e).humanize(e)},this.getValueForMapping=function(e,n){return null==n?"":this.getHandler(n).getValue(e,n)},this.getRawValueForMapping=function(e,n){return null==n?"":this.getHandler(n).getRawValue(e,n)},this.getHandler=function(e){var n=_.find(c,function(n){return n.isGood(e)});if(null==n)throw new Error("invalid mapping");return n}}function n(){this.isGood=function(e){return _.isObjectLike(e)&&e.id&&e.keyPath&&_.isArray(e.keyPath)&&0!==e.keyPath.length},this.humanize=function(e){return e.label},this.getValue=function(e,n){return a(e,n.keyPath)},this.getRawValue=this.getValue}function i(){this.isGood=function(e){return _.isString(e)&&0!==e.length},this.humanize=function(e){return['"',e,'"'].join("")},this.getValue=function(e,n){return n},this.getRawValue=this.getValue}function t(e,n){function i(n){return n?(n.hasOwnProperty("__fieldbusDeviceType")||(Object.defineProperty(n,"__fieldbusDeviceType",{configurable:!0,writable:!0,value:!1}),e.getDeviceTypeFromDevice(n).then(e.addDiscreteIOsMeta).then(e.addRegistersMeta).then(function(e){n.__fieldbusDeviceType=e})),n):""}function t(e,i,t){if(!e.__fieldbusDeviceType)return a(e,i.keyPath);var c,r=_.head(i.keyPath);if("c8y_CoilStatus"===r?c=_.find(e.__fieldbusDeviceType.c8y_Coils,{name:_.last(i.keyPath)}):"c8y_RegisterStatus"===r&&(c=_.find(e.__fieldbusDeviceType.c8y_Registers,{name:_.last(i.keyPath)})),!c)return a(e,i.keyPath);var d=t?n.getCurrentElementValueFormatted:n.getCurrentElementValue;return d(e,c)}this.isGood=function(e){return _.isObjectLike(e)&&e.id&&e.keyPath&&_.isArray(e.keyPath)&&0!==e.keyPath.length&&e.fieldbus===!0},this.humanize=function(e){return e.label},this.getValue=function(e,n){return e=i(e),t(e,n,!0)},this.getRawValue=function(e,n){return e=i(e),t(e,n,!1)}}function a(e,n){for(var i=0;i<n.length&&(null!==e&&void 0!==e);i++)e=e[n[i]];return e}angular.module("c8y.parts.scadaWidget").service("ScadaWidgetUtilSvc",["c8yDeviceDatabase","c8yModbusDevice",e])}(),function(){"use strict";function e(e){var n;n='<div ng-controller="ScadaWidgetCtrl as ctrl" style="height: 100%">\n  <div c8y-scada-svg ng-model="ctrl.svgFile.data" mapping="child.config.mapping" device="child.config.device" devices="ctrl.devices" device-ids="child.config.deviceIds" style="height:100%"></div>\n</div>\n',e.put("core_scada/views/component.html",n),e.put("/apps/core/scada/views/component.html",n),n='<div ng-controller="ScadaWidgetConfigCtrl as ctrl">\n  <div class="form-group">\n    <label>\n      {{\'SCADA\' | translate}}\n    </label>\n    <input class="form-control" type="text" name="svg-name" ng-model="ctrl.svgFile.name" ng-required="true" ng-readonly="true"/>\n    <div>\n      <input class="form-control" type="file" name="svg-file" accept=".svg" c8y-on-change="ctrl.onSelectFile(event)" style="height: initial"/>\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label>{{\'Preview\' | translate}}</label>\n    <span ng-show="ctrl.loading" style="margin-left: 5px">\n      <i c8y-icon="spinner" class="fa-spin"></i>\n    </span>\n    <div ng-switch="!!(ctrl.device && forms.componentForm.mapping.$valid && config.mapping)">\n      <div ng-switch-when="true" c8y-scada-svg ng-model="ctrl.svgFile.data" mapping="config.mapping" device="ctrl.device" devices="ctrl.devices" device-ids="config.deviceIds" style="height:200px"></div>\n      <div ng-switch-default class="alert-warning" style="padding: 5px" translate>You need to choose a device and fill all mappings to be able to preview an SVG.</div>\n    </div>\n  </div>\n\n  <div c8y-scada-mapping name="mapping" ng-model="config.mapping" device="ctrl.device" devices="ctrl.devices" device-ids="config.deviceIds" on-device-ids-change="ctrl.onDeviceIdsChange()">\n  </div>\n</div>\n',e.put("core_scada/views/componentConfig.html",n),e.put("/apps/core/scada/views/componentConfig.html",n),n='<table class="table">\n  <thead>\n    <th>\n      <label translate>Placeholder</label>\n    </th>\n    <th>\n      <label translate>Target</label>\n    </th>\n    <th>\n      <label translate>Mapped to</label>\n    </th>\n    <th>\n      <label translate>Current value</label>\n    </th>\n    <th></th>\n  </thead>\n  <tbody>\n    <tr ng-repeat="(key, value) in mapping track by key" class="property" ng-class="{danger: hasError[key]}">\n      <td>{{key}}</td>\n      <td>\n        <span ng-show="devices.length == 1">\n          {{devices[0].name}}\n        </span>\n        <select ng-show="devices.length > 1" ng-options="device.id as device.name for device in devices" ng-model="deviceIds[key]" ng-required ng-change="onDeviceIdsChange()">\n        </select>\n      </td>\n      <td ng-switch="!!value.configSchema">\n        <a ng-switch-when="true" class="btn btn-xs btn-default" href ng-click="editComputedProperty(value)">\n          <i c8y-icon="bolt" class="fa fw fa-bolt"></i> {{humanizeValue(value)}}\n        </a>\n        <span ng-switch-default>{{humanizeValue(value)}}</span>\n      </td>\n      <td class="word-break">{{propertyValueFor(value, key)}}</td>\n      <td style="width:15%">\n        <button type="button" class="btn btn-danger btn-xs showOnHover pull-right" title="{{\'Clear mapping\' | translate}}" ng-click="clearMapping(key)">\n          <i c8y-icon="scissors"></i>\n        </button>\n        <button type="button" class="btn btn-primary btn-xs showOnHover pull-right" title="{{\'Assign fieldbus property\' | translate}}" ng-click="setFieldbusMapping(key)">\n          <i c8y-icon="tasks"></i>\n        </button>\n        <button type="button" class="btn btn-primary btn-xs showOnHover pull-right" title="{{\'Assign device property\' | translate}}" ng-click="setMapping(key)">\n          <i c8y-icon="pencil"></i>\n        </button>\n      </td>\n    </tr>\n    \n  </tbody>\n</table>\n',e.put("core_scada/views/mapping.html",n),e.put("/apps/core/scada/views/mapping.html",n)}angular.module("c8y.parts.scadaWidget").run(["$templateCache",e])}();