/* core_deviceControlRelay 8.7.2 2017-08-02T09:54:10+00:00 e22b35b1d531 (hotfix/8.7.2) tip */
!function(){"use strict";function e(e,t){e.add({name:"deviceControlRelayWidget",nameDisplay:t("Relay control"),description:t("Remote control a device's relay switch."),templateUrl:"core_deviceControlRelay/widget.html",options:{groupsSelectable:!1}})}angular.module("c8y.deviceControl.relay",[]).config(["c8yComponentsProvider","gettext",e])}(),function(){"use strict";function e(e,t){function n(){var n=t.deviceId;return e.child.config&&e.child.config.device&&e.child.config.device.id&&(n=e.child.config.device.id),n}var o=this;o.getDeviceId=n}angular.module("c8y.deviceControl.relay").controller("deviceControlRelayWidgetCtrl",["$scope","$routeParams",e])}(),function(){"use strict";function e(){return{restrict:"E",scope:{device:"&",suppressAlerts:"&",onSuccess:"&",onError:"&"},controller:"c8yRelayControlCtrl",controllerAs:"ctrl",templateUrl:"core_deviceControlRelay/relayControl/relayControl.html",link:function(e,t,n,o){var r=t.find("input")[0];o.buttonChecked=function(){return r.checked}}}}angular.module("c8y.deviceControl.relay").directive("c8yRelayControl",e)}(),function(){"use strict";function e(e,t,n,o,r,i,c){function l(n){var o=n&&(n.id||n);o&&t.detailRealtime(o,e).then(function(e){w=e})}function a(){return n.supportsOperation(w,"c8y_Relay")}function s(){return w&&w.c8y_Relay&&"CLOSED"===w.c8y_Relay.relayState}function u(){var e=s();return _.isUndefined(e)&&(e=!x.buttonChecked()),e}function d(){var e;return e=u()?y():p()}function y(){return v("OPEN",i("Open relay"))}function p(){return v("CLOSED",i("Close relay"))}function v(e,t){var n={deviceId:w.id,description:t,c8y_Relay:{relayState:e}};return o.createWithNotifications(n).then(function(e){e.created.then(_.partial(g,n)),e.completed.then(f)})}function g(e){R(c.getString('Sent operation: "{{description}}"!',{description:c.getString(e.description)}))}function f(e){e.status===o.status.SUCCESSFUL?C(e):e.status===o.status.FAILED&&h(e)}function C(t){R(c.getString('Successfully executed operation: "{{description}}"!',{description:c.getString(t.description)})),e.onSuccess&&e.onSuccess({operationResult:t})}function h(t){S(t.failureReason?c.getString('Failed to execute operation beacuse of reason: "{{failureReason}}"!',{failureReason:c.getString(t.failureReason)}):i("Failed to execute operation!")),e.onFailure&&e.onFailure({operationResult:t})}function R(e){m(r.success,e)}function S(e){m(r.danger,e)}function m(e,t){b()||e(t)}function b(){return e.suppressAlerts&&e.suppressAlerts()}var w,x=this;e.$watch("device()",l),this.isSupported=a,this.isClosed=s,this.toggle=d}angular.module("c8y.deviceControl.relay").controller("c8yRelayControlCtrl",["$scope","c8yInventory","c8yDevices","c8yDeviceControl","c8yAlert","gettext","gettextCatalog",e])}(),function(){"use strict";function e(e){var t;t='<div>\n  <div ng-hide="ctrl.isSupported()" class="alert alert-warning" translate>\n    Operation not supported by this device\n  </div>\n  <div ng-show="ctrl.isSupported()">\n    <label class="c8y-switch">\n      <input type="checkbox" ng-checked="ctrl.isClosed()" ng-click="ctrl.toggle()">\n      <span></span>\n    </label>\n  </div>\n</div>\n',e.put("core_deviceControlRelay/relayControl/relayControl.html",t),e.put("/apps/core/deviceControlRelay/relayControl/relayControl.html",t),t='<div ng-controller="deviceControlRelayWidgetCtrl as ctrl" style="padding: 10px">\n  <c8y-relay-control device="ctrl.getDeviceId()"></c8y-relay-control>\n</div>\n',e.put("core_deviceControlRelay/widget.html",t),e.put("/apps/core/deviceControlRelay/widget.html",t)}angular.module("c8y.deviceControl.relay").run(["$templateCache",e])}();